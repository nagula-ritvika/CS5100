Starting on 2-2 at 11:46:10

Question q1
===========

*** PASS: test_cases/q1/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'D', 'C']
*** PASS: test_cases/q1/graph_bfs_vs_dfs.test
*** 	solution:		['2:A->D', '0:D->G']
*** 	expanded_states:	['A', 'D']
*** PASS: test_cases/q1/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q1/graph_manypaths.test
*** 	solution:		['2:A->B2', '0:B2->C', '0:C->D', '2:D->E2', '0:E2->F', '0:F->G']
*** 	expanded_states:	['A', 'B2', 'C', 'D', 'E2', 'F']
*** PASS: test_cases/q1/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 130
*** 	nodes expanded:		146

### Question q1: 3/3 ###


Question q2
===========

*** PASS: test_cases/q2/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q2/graph_bfs_vs_dfs.test
*** 	solution:		['1:A->G']
*** 	expanded_states:	['A', 'B']
*** PASS: test_cases/q2/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q2/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** PASS: test_cases/q2/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		269

### Question q2: 3/3 ###


Question q3
===========

*** PASS: test_cases/q3/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q3/graph_bfs_vs_dfs.test
*** 	solution:		['1:A->G']
*** 	expanded_states:	['A', 'B']
*** PASS: test_cases/q3/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q3/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** PASS: test_cases/q3/ucs_0_graph.test
*** 	solution:		['Right', 'Down', 'Down']
*** 	expanded_states:	['A', 'B', 'D', 'C', 'G']
*** PASS: test_cases/q3/ucs_1_problemC.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		269
*** PASS: test_cases/q3/ucs_2_problemE.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 74
*** 	nodes expanded:		260
*** PASS: test_cases/q3/ucs_3_problemW.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 152
*** 	nodes expanded:		173
*** PASS: test_cases/q3/ucs_4_testSearch.test
*** 	pacman layout:		testSearch
*** 	solution length: 7
*** 	nodes expanded:		14
*** PASS: test_cases/q3/ucs_5_goalAtDequeue.test
*** 	solution:		['1:A->B', '0:B->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C']

### Question q3: 3/3 ###


Question q4
===========

*** PASS: test_cases/q4/astar_0.test
*** 	solution:		['Right', 'Down', 'Down']
*** 	expanded_states:	['A', 'B', 'D', 'C', 'G']
*** PASS: test_cases/q4/astar_1_graph_heuristic.test
*** 	solution:		['0', '0', '2']
*** 	expanded_states:	['S', 'A', 'D', 'C']
*** PASS: test_cases/q4/astar_2_manhattan.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		221
*** PASS: test_cases/q4/astar_3_goalAtDequeue.test
*** 	solution:		['1:A->B', '0:B->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q4/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q4/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']

### Question q4: 3/3 ###


Question q5
===========

(((4, 6), (False, False, False, False)), 'North', 1)
(((5, 5), (False, False, False, False)), 'East', 1)
(((3, 5), (False, False, False, False)), 'West', 1)
(((4, 5), (False, False, False, False)), 'South', 1)
(((5, 6), (False, False, False, False)), 'East', 1)
(((3, 6), (False, False, False, False)), 'West', 1)
(((5, 6), (False, False, False, False)), 'North', 1)
(((6, 5), (False, False, False, False)), 'East', 1)
(((4, 5), (False, False, False, False)), 'West', 1)
(((3, 6), (False, False, False, False)), 'North', 1)
(((4, 5), (False, False, False, False)), 'East', 1)
(((2, 5), (False, False, False, False)), 'West', 1)
(((5, 5), (False, False, False, False)), 'South', 1)
corner found (6, 6)
(((6, 6), (False, False, False, True)), 'East', 1)
(((4, 6), (False, False, False, False)), 'West', 1)
(((3, 5), (False, False, False, False)), 'South', 1)
(((4, 6), (False, False, False, False)), 'East', 1)
(((2, 6), (False, False, False, False)), 'West', 1)
corner found (6, 6)
(((6, 6), (False, False, False, True)), 'North', 1)
(((6, 4), (False, False, False, False)), 'South', 1)
(((5, 5), (False, False, False, False)), 'West', 1)
(((2, 6), (False, False, False, False)), 'North', 1)
(((3, 5), (False, False, False, False)), 'East', 1)
(((1, 5), (False, False, False, False)), 'West', 1)
corner found (6, 5)
(((6, 5), (False, False, False, True)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, False, False, True)), 'West', 1)
(((2, 5), (False, False, False, False)), 'South', 1)
(((3, 6), (False, False, False, False)), 'East', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'West', 1)
(((6, 5), (False, False, False, False)), 'North', 1)
(((6, 3), (False, False, False, False)), 'South', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'North', 1)
(((1, 4), (False, False, False, False)), 'South', 1)
(((2, 5), (False, False, False, False)), 'East', 1)
corner found (6, 6)
(((6, 6), (False, False, False, True)), 'North', 1)
corner found (6, 4)
(((6, 4), (False, False, False, True)), 'South', 1)
corner found (5, 5)
(((5, 5), (False, False, False, True)), 'West', 1)
corner found (5, 5)
(((5, 5), (False, False, False, True)), 'South', 1)
corner found (6, 6)
(((6, 6), (False, False, False, True)), 'East', 1)
corner found (4, 6)
(((4, 6), (False, False, False, True)), 'West', 1)
corner found (1, 5)
(((1, 5), (False, True, False, False)), 'South', 1)
corner found (2, 6)
(((2, 6), (False, True, False, False)), 'East', 1)
(((6, 4), (False, False, False, False)), 'North', 1)
(((5, 3), (False, False, False, False)), 'West', 1)
(((1, 5), (False, False, False, False)), 'North', 1)
(((1, 3), (False, False, False, False)), 'South', 1)
corner found (6, 5)
(((6, 5), (False, False, False, True)), 'North', 1)
corner found (6, 3)
(((6, 3), (False, False, False, True)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, False, False, True)), 'North', 1)
corner found (6, 5)
(((6, 5), (False, False, False, True)), 'East', 1)
corner found (4, 5)
(((4, 5), (False, False, False, True)), 'West', 1)
corner found (4, 5)
(((4, 5), (False, False, False, True)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, False, False, True)), 'East', 1)
corner found (3, 6)
(((3, 6), (False, False, False, True)), 'West', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'North', 1)
corner found (1, 4)
(((1, 4), (False, True, False, False)), 'South', 1)
corner found (2, 5)
(((2, 5), (False, True, False, False)), 'East', 1)
corner found (2, 5)
(((2, 5), (False, True, False, False)), 'South', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'East', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'West', 1)
(((6, 3), (False, False, False, False)), 'East', 1)
(((4, 3), (False, False, False, False)), 'West', 1)
(((1, 4), (False, False, False, False)), 'North', 1)
(((1, 2), (False, False, False, False)), 'South', 1)
corner found (6, 4)
(((6, 4), (False, False, False, True)), 'North', 1)
corner found (5, 3)
(((5, 3), (False, False, False, True)), 'West', 1)
corner found (4, 6)
(((4, 6), (False, False, False, True)), 'North', 1)
corner found (5, 5)
(((5, 5), (False, False, False, True)), 'East', 1)
corner found (3, 5)
(((3, 5), (False, False, False, True)), 'West', 1)
corner found (3, 5)
(((3, 5), (False, False, False, True)), 'South', 1)
corner found (4, 6)
(((4, 6), (False, False, False, True)), 'East', 1)
corner found (2, 6)
(((2, 6), (False, False, False, True)), 'West', 1)
corner found (1, 5)
(((1, 5), (False, True, False, False)), 'North', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'South', 1)
corner found (2, 6)
(((2, 6), (False, True, False, False)), 'North', 1)
corner found (3, 5)
(((3, 5), (False, True, False, False)), 'East', 1)
corner found (1, 5)
(((1, 5), (False, True, False, False)), 'West', 1)
corner found (3, 5)
(((3, 5), (False, True, False, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (False, True, False, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (False, True, False, False)), 'West', 1)
(((5, 3), (False, False, False, False)), 'East', 1)
(((3, 3), (False, False, False, False)), 'West', 1)
(((1, 3), (False, False, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
corner found (6, 3)
(((6, 3), (False, False, False, True)), 'East', 1)
corner found (4, 3)
(((4, 3), (False, False, False, True)), 'West', 1)
corner found (3, 6)
(((3, 6), (False, False, False, True)), 'North', 1)
corner found (4, 5)
(((4, 5), (False, False, False, True)), 'East', 1)
corner found (2, 5)
(((2, 5), (False, False, False, True)), 'West', 1)
corner found (2, 5)
(((2, 5), (False, False, False, True)), 'South', 1)
corner found (3, 6)
(((3, 6), (False, False, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, False, True)), 'West', 1)
corner found (1, 4)
(((1, 4), (False, True, False, False)), 'North', 1)
corner found (1, 2)
(((1, 2), (False, True, False, False)), 'South', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'North', 1)
corner found (4, 5)
(((4, 5), (False, True, False, False)), 'East', 1)
corner found (2, 5)
(((2, 5), (False, True, False, False)), 'West', 1)
corner found (4, 5)
(((4, 5), (False, True, False, False)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'West', 1)
(((3, 2), (False, False, False, False)), 'South', 1)
(((4, 3), (False, False, False, False)), 'East', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'North', 1)
corner found (5, 3)
(((5, 3), (False, False, False, True)), 'East', 1)
corner found (3, 3)
(((3, 3), (False, False, False, True)), 'West', 1)
corner found (2, 6)
(((2, 6), (False, False, False, True)), 'North', 1)
corner found (3, 5)
(((3, 5), (False, False, False, True)), 'East', 1)
corner found (1, 5)
(((1, 5), (False, False, False, True)), 'West', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, True, False, True)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, True, False, True)), 'East', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (False, True, False, False)), 'North', 1)
corner found (5, 5)
(((5, 5), (False, True, False, False)), 'East', 1)
corner found (3, 5)
(((3, 5), (False, True, False, False)), 'West', 1)
corner found (5, 5)
(((5, 5), (False, True, False, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, True, False, True)), 'East', 1)
corner found (4, 6)
(((4, 6), (False, True, False, False)), 'West', 1)
(((3, 3), (False, False, False, False)), 'North', 1)
(((3, 1), (False, False, False, False)), 'South', 1)
corner found (1, 3)
(((1, 3), (True, False, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
corner found (3, 2)
(((3, 2), (False, False, False, True)), 'South', 1)
corner found (4, 3)
(((4, 3), (False, False, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, False, True)), 'North', 1)
corner found (1, 4)
(((1, 4), (False, False, False, True)), 'South', 1)
corner found (2, 5)
(((2, 5), (False, False, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, False, True)), 'North', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (False, True, False, True)), 'South', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (False, True, False, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (False, True, False, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, True, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, False, True)), 'West', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'North', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'North', 1)
corner found (6, 5)
(((6, 5), (False, True, False, False)), 'East', 1)
corner found (4, 5)
(((4, 5), (False, True, False, False)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, True, False, True)), 'West', 1)
(((3, 2), (False, False, False, False)), 'North', 1)
(((4, 1), (False, False, False, False)), 'East', 1)
corner found (1, 4)
(((1, 4), (True, False, False, False)), 'North', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'South', 1)
corner found (3, 3)
(((3, 3), (False, False, False, True)), 'North', 1)
corner found (3, 1)
(((3, 1), (False, False, False, True)), 'South', 1)
corner found (1, 5)
(((1, 5), (False, False, False, True)), 'North', 1)
corner found (1, 3)
(((1, 3), (False, False, False, True)), 'South', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, True, False, True)), 'North', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (False, True, False, True)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, True, False, True)), 'North', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, True, False, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, True, False, True)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, True, False, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, True, False, True)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, True, False, True)), 'West', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, True, False, True)), 'North', 1)
corner found (6, 4)
(((6, 4), (False, True, False, False)), 'South', 1)
corner found (5, 5)
(((5, 5), (False, True, False, False)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, True, False, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, True, False, True)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, True, False, True)), 'West', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, True, False, True)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, True, False, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, True, False, True)), 'West', 1)
(((5, 1), (False, False, False, False)), 'East', 1)
(((3, 1), (False, False, False, False)), 'West', 1)
corner found (1, 5)
(((1, 5), (True, False, False, False)), 'North', 1)
corner found (1, 3)
(((1, 3), (True, False, False, False)), 'South', 1)
corner found (3, 2)
(((3, 2), (False, False, False, True)), 'North', 1)
corner found (4, 1)
(((4, 1), (False, False, False, True)), 'East', 1)
corner found (1, 4)
(((1, 4), (False, False, False, True)), 'North', 1)
corner found (1, 2)
(((1, 2), (False, False, False, True)), 'South', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (False, True, False, True)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (False, True, False, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, True, False, True)), 'North', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, True, False, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (False, True, False, True)), 'West', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, True, False, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, True, False, True)), 'West', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, True, False, False)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'South', 1)
corner found (6, 5)
(((6, 5), (False, True, False, False)), 'North', 1)
corner found (6, 3)
(((6, 3), (False, True, False, False)), 'South', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, True, False, True)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, True, False, True)), 'North', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, True, False, True)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, True, False, True)), 'West', 1)
corner found (6, 1)
(((6, 1), (False, False, True, False)), 'East', 1)
(((4, 1), (False, False, False, False)), 'West', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'North', 1)
corner found (1, 4)
(((1, 4), (True, False, False, False)), 'South', 1)
corner found (2, 5)
(((2, 5), (True, False, False, False)), 'East', 1)
corner found (5, 1)
(((5, 1), (False, False, False, True)), 'East', 1)
corner found (3, 1)
(((3, 1), (False, False, False, True)), 'West', 1)
corner found (1, 3)
(((1, 3), (False, False, False, True)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, False, False, True)), 'South', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (False, True, False, True)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, True, False, True)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, True, False, True)), 'East', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, True, False, True)), 'West', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, False)), 'North', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'South', 1)
corner found (6, 4)
(((6, 4), (False, True, False, False)), 'North', 1)
corner found (5, 3)
(((5, 3), (False, True, False, False)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, True, False, True)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, False, True)), 'West', 1)
corner found (5, 1)
(((5, 1), (False, False, True, False)), 'West', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, False)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (True, False, False, False)), 'North', 1)
corner found (3, 5)
(((3, 5), (True, False, False, False)), 'East', 1)
corner found (1, 5)
(((1, 5), (True, False, False, False)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, False, True, True)), 'East', 1)
corner found (4, 1)
(((4, 1), (False, False, False, True)), 'West', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, False, False, True)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, True)), 'North', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'North', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, True, False, False)), 'South', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, False)), 'East', 1)
corner found (6, 3)
(((6, 3), (False, True, False, False)), 'East', 1)
corner found (4, 3)
(((4, 3), (False, True, False, False)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, True, False, True)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, False, True)), 'West', 1)
corner found (6, 1)
(((6, 1), (False, False, True, False)), 'East', 1)
corner found (4, 1)
(((4, 1), (False, False, True, False)), 'West', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, False)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'West', 1)
corner found (2, 5)
(((2, 5), (True, False, False, False)), 'South', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'West', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'North', 1)
corner found (4, 5)
(((4, 5), (True, False, False, False)), 'East', 1)
corner found (2, 5)
(((2, 5), (True, False, False, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, False, True, True)), 'West', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, False, False, True)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, False, False, True)), 'South', 1)
corner found (1, 3)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, True)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, True)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, False)), 'North', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, False)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, False)), 'West', 1)
corner found (5, 3)
(((5, 3), (False, True, False, False)), 'East', 1)
corner found (3, 3)
(((3, 3), (False, True, False, False)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, False, True)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, False, True)), 'West', 1)
corner found (5, 1)
(((5, 1), (False, False, True, False)), 'East', 1)
corner found (3, 1)
(((3, 1), (False, False, True, False)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, False)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, False)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, False)), 'West', 1)
corner found (3, 5)
(((3, 5), (True, False, False, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (True, False, False, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (True, False, False, False)), 'West', 1)
corner found (4, 6)
(((4, 6), (True, False, False, False)), 'North', 1)
corner found (5, 5)
(((5, 5), (True, False, False, False)), 'East', 1)
corner found (3, 5)
(((3, 5), (True, False, False, False)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, False, True, True)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, False, True, True)), 'West', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, False, False, True)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, False, False, True)), 'South', 1)
corner found (1, 4)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, True, False, True)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'North', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, False)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, False)), 'West', 1)
corner found (3, 2)
(((3, 2), (False, True, False, False)), 'South', 1)
corner found (4, 3)
(((4, 3), (False, True, False, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, False, True)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, False, True)), 'East', 1)
corner found (3, 2)
(((3, 2), (False, False, True, False)), 'North', 1)
corner found (4, 1)
(((4, 1), (False, False, True, False)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, False)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'West', 1)
corner found (4, 5)
(((4, 5), (True, False, False, False)), 'South', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'West', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'North', 1)
corner found (6, 5)
(((6, 5), (True, False, False, False)), 'East', 1)
corner found (4, 5)
(((4, 5), (True, False, False, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, False, True, True)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, False, True, True)), 'West', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, False, False, True)), 'North', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, False, False, True)), 'South', 1)
corner found (1, 5)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, True)), 'North', 1)
corner found (1, 3)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, False)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, False)), 'East', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, False)), 'West', 1)
corner found (3, 3)
(((3, 3), (False, True, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (False, True, False, False)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, False, True)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, False, True)), 'South', 1)
corner found (3, 3)
(((3, 3), (False, False, True, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (False, False, True, False)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, False)), 'West', 1)
corner found (5, 5)
(((5, 5), (True, False, False, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, False, True)), 'East', 1)
corner found (4, 6)
(((4, 6), (True, False, False, False)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, False, True)), 'North', 1)
corner found (6, 4)
(((6, 4), (True, False, False, False)), 'South', 1)
corner found (5, 5)
(((5, 5), (True, False, False, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, False, True, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, False, True, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, True)), 'North', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, False, False, True)), 'South', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, False, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, True)), 'North', 1)
corner found (1, 4)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, True, False, True)), 'South', 1)
corner found (2, 5)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, True)), 'East', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'North', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, True, False, False)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, False)), 'West', 1)
corner found (3, 2)
(((3, 2), (False, True, False, False)), 'North', 1)
corner found (4, 1)
(((4, 1), (False, True, False, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, False, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, False, True)), 'East', 1)
corner found (3, 2)
(((3, 2), (False, False, True, False)), 'South', 1)
corner found (4, 3)
(((4, 3), (False, False, True, False)), 'East', 1)
corner found (6, 5)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, True)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, False, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, False, False, True)), 'West', 1)
corner found (6, 5)
(((6, 5), (True, False, False, False)), 'North', 1)
corner found (6, 3)
(((6, 3), (True, False, False, False)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, False, True, True)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, False, True, True)), 'South', 1)
corner found (1, 5)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, True)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, True)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, False, False, True)), 'North', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, False, False, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, False, False, True)), 'West', 1)
corner found (2, 6)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, True)), 'North', 1)
corner found (3, 5)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, True, False, True)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, False)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, False)), 'West', 1)
corner found (5, 1)
(((5, 1), (False, True, False, False)), 'East', 1)
corner found (3, 1)
(((3, 1), (False, True, False, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, True, False, True)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, False, True)), 'West', 1)
corner found (5, 3)
(((5, 3), (False, False, True, False)), 'East', 1)
corner found (3, 3)
(((3, 3), (False, False, True, False)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, True)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, True)), 'West', 1)
corner found (5, 5)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, True)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, True)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, False, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, False, False, True)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, False, False, True)), 'West', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, False, False, True)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, False, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, False, False, True)), 'West', 1)
corner found (6, 4)
(((6, 4), (True, False, False, False)), 'North', 1)
corner found (5, 3)
(((5, 3), (True, False, False, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, False, True, True)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, False, True, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, True)), 'West', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, False, False, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, False, False, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, True)), 'West', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, False, False, True)), 'North', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, False, False, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, False, False, True)), 'West', 1)
corner found (3, 6)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, True)), 'North', 1)
corner found (4, 5)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (True, True, False, True)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, True, False, False)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, True, False, False)), 'South', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, True, True, False)), 'East', 1)
corner found (4, 1)
(((4, 1), (False, True, False, False)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, True, True, True)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, False, True)), 'West', 1)
corner found (6, 3)
(((6, 3), (False, False, True, False)), 'East', 1)
corner found (4, 3)
(((4, 3), (False, False, True, False)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, True, False, True)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, True)), 'North', 1)
corner found (6, 5)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, True, False, True)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, True)), 'West', 1)
corner found (4, 5)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, True, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, True)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, False, False, True)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, False, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, False, False, True)), 'North', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, False, False, True)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, False, False, True)), 'West', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (True, False, False, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, False, False, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, False, False, True)), 'West', 1)
corner found (6, 3)
(((6, 3), (True, False, False, False)), 'East', 1)
corner found (4, 3)
(((4, 3), (True, False, False, False)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, False, True, True)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, False, True, True)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, True)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, True)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, False, False, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, False, False, True)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, False, False, True)), 'West', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, False, False, True)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, False, False, True)), 'East', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, False, False, True)), 'West', 1)
corner found (4, 6)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, True)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, True)), 'East', 1)
corner found (3, 5)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, True)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, False)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, True, False, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, True, True, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, True, True, True)), 'West', 1)
corner found (6, 4)
(((6, 4), (False, False, True, False)), 'North', 1)
corner found (5, 3)
(((5, 3), (False, False, True, False)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, True)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, True, False, True)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, False, False, True)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, False, False, True)), 'West', 1)
corner found (5, 3)
(((5, 3), (True, False, False, False)), 'East', 1)
corner found (3, 3)
(((3, 3), (True, False, False, False)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, False, True, True)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, False, True, True)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, True, False, False)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, False)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, True, True, False)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, True, False)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (False, True, True, True)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, True, True)), 'West', 1)
corner found (6, 5)
(((6, 5), (False, False, True, False)), 'North', 1)
corner found (6, 3)
(((6, 3), (False, False, True, False)), 'South', 1)
corner found (6, 3)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, True, False, True)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, True)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, False, False, True)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, False, False, True)), 'West', 1)
corner found (3, 2)
(((3, 2), (True, False, False, False)), 'South', 1)
corner found (4, 3)
(((4, 3), (True, False, False, False)), 'East', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, False, True, True)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, False, True, True)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, True, False, False)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, True, True, False)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, True, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (False, True, True, True)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, True, True)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, False, True, True)), 'North', 1)
corner found (6, 4)
(((6, 4), (False, False, True, False)), 'South', 1)
corner found (5, 5)
(((5, 5), (False, False, True, False)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, True, False, True)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, True)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, False, False, True)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, False, False, True)), 'West', 1)
corner found (3, 3)
(((3, 3), (True, False, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'South', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, False, True, True)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, False, True, True)), 'South', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, True, False)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, True, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, True, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (False, True, True, True)), 'East', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, False, True, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, False, True, True)), 'West', 1)
corner found (5, 6)
(((5, 6), (False, False, True, False)), 'North', 1)
corner found (6, 5)
(((6, 5), (False, False, True, False)), 'East', 1)
corner found (4, 5)
(((4, 5), (False, False, True, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, True)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, True)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, False, False, True)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, False, False, True)), 'East', 1)
corner found (3, 2)
(((3, 2), (True, False, False, False)), 'North', 1)
corner found (4, 1)
(((4, 1), (True, False, False, False)), 'East', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, False, True, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, False, True, True)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, False, True, True)), 'West', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, False)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, True, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, True, False)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, True, True)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (False, True, True, True)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, False, True, True)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, False, True, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, False, True, True)), 'West', 1)
corner found (5, 5)
(((5, 5), (False, False, True, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (False, False, True, True)), 'East', 1)
corner found (4, 6)
(((4, 6), (False, False, True, False)), 'West', 1)
corner found (4, 6)
(((4, 6), (False, False, True, False)), 'North', 1)
corner found (5, 5)
(((5, 5), (False, False, True, False)), 'East', 1)
corner found (3, 5)
(((3, 5), (False, False, True, False)), 'West', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, True)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, True)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, False, False, True)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, False, False, True)), 'South', 1)
corner found (5, 1)
(((5, 1), (True, False, False, False)), 'East', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'West', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, False, True, True)), 'North', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (False, False, True, True)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, False, True, True)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, False, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, True, False)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, True, False)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (False, True, True, True)), 'South', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, True, True)), 'East', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, False, True, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (False, False, True, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, False, True, True)), 'West', 1)
corner found (4, 5)
(((4, 5), (False, False, True, False)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, False, True, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (False, False, True, False)), 'West', 1)
corner found (3, 6)
(((3, 6), (False, False, True, False)), 'North', 1)
corner found (4, 5)
(((4, 5), (False, False, True, False)), 'East', 1)
corner found (2, 5)
(((2, 5), (False, False, True, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, False, True)), 'East', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, False, False, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, False, False, True)), 'East', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, False, True, False)), 'East', 1)
corner found (4, 1)
(((4, 1), (True, False, False, False)), 'West', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, False, True, True)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (False, False, True, True)), 'East', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, False, True, True)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, True, False, False)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, False)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, True, False)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, True, False)), 'West', 1)
corner found (5, 3)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, True, True)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (False, True, True, True)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, False, True, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (False, False, True, True)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, False, True, True)), 'West', 1)
corner found (3, 5)
(((3, 5), (False, False, True, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (False, False, True, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (False, False, True, False)), 'West', 1)
corner found (2, 6)
(((2, 6), (False, False, True, False)), 'North', 1)
corner found (3, 5)
(((3, 5), (False, False, True, False)), 'East', 1)
corner found (1, 5)
(((1, 5), (False, False, True, False)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, True, False, True)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, True)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, False, False, True)), 'East', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, False, False, True)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, False, True, False)), 'West', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, False, True, True)), 'North', 1)
corner found (4, 5)
corner found (4, 5)
(((4, 5), (False, False, True, True)), 'East', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (False, False, True, True)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, True, True, False)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, False, False)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, True, True, False)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, True, False)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (False, True, True, True)), 'East', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (False, True, True, True)), 'West', 1)
corner found (2, 5)
corner found (2, 5)
(((2, 5), (False, False, True, True)), 'South', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (False, False, True, True)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, True, True)), 'West', 1)
corner found (2, 5)
(((2, 5), (False, False, True, False)), 'South', 1)
corner found (3, 6)
(((3, 6), (False, False, True, False)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, True, False)), 'West', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (False, True, True, False)), 'North', 1)
corner found (1, 4)
(((1, 4), (False, False, True, False)), 'South', 1)
corner found (2, 5)
(((2, 5), (False, False, True, False)), 'East', 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, True, True, True)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, False, True)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, False, True, True)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, False, False, True)), 'West', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, False, True, False)), 'East', 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, False, True, False)), 'West', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, False, True, True)), 'North', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (False, False, True, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, False, True, True)), 'West', 1)
corner found (5, 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, True, True, False)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, True, True, False)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, True, False)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (False, True, True, True)), 'North', 1)
corner found (5, 3)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (False, True, True, True)), 'West', 1)
corner found (1, 5)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, True, True, True)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, True, True, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (False, True, True, False)), 'South', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (False, True, True, False)), 'East', 1)
corner found (1, 5)
(((1, 5), (False, False, True, False)), 'North', 1)
corner found (1, 3)
(((1, 3), (False, False, True, False)), 'South', 1)
*** PASS: test_cases/q5/corner_tiny_corner.test
*** 	pacman layout:		tinyCorner
*** 	solution length:		28

### Question q5: 3/3 ###


Question q6
===========

corner found (1, 3)
(((1, 3), (False, True, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
(((2, 2), (False, False, False, False)), 'East', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
(((2, 2), (False, False, False, False)), 'East', 1)
corner found (1, 2)
(((1, 2), (False, True, False, False)), 'South', 1)
corner found (2, 3)
(((2, 3), (False, True, False, False)), 'East', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (False, True, False, False)), 'East', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'North', 1)
corner found (2, 1)
corner found (2, 1)
(((2, 1), (True, True, False, False)), 'East', 1)
corner found (2, 2)
corner found (2, 2)
(((2, 2), (True, True, False, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, False)), 'East', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, True, False)), 'East', 1)
corner found (2, 1)
corner found (2, 1)
(((2, 1), (True, True, False, False)), 'West', 1)
corner found (4, 2)
corner found (4, 2)
corner found (4, 2)
(((4, 2), (True, True, True, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, True, False)), 'West', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, True, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, True, False)), 'South', 1)
corner found (3, 2)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, True, False)), 'West', 1)
*** PASS: heuristic value less than true cost at start state
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'North', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'East', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'South', 1)
corner found (2, 3)
corner found (2, 3)
(((2, 3), (True, True, False, False)), 'East', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, False)), 'East', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'West', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, True)), 'East', 1)
corner found (2, 3)
corner found (2, 3)
(((2, 3), (True, True, False, False)), 'West', 1)
corner found (4, 2)
corner found (4, 2)
corner found (4, 2)
(((4, 2), (True, True, False, True)), 'South', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, True)), 'West', 1)
corner found (4, 3)
corner found (4, 3)
corner found (4, 3)
(((4, 3), (True, True, False, True)), 'North', 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
corner found (4, 1)
(((4, 1), (True, True, True, True)), 'South', 1)
*** PASS: heuristic value less than true cost at start state
(((5, 5), (False, False, False, False)), 'North', 1)
(((5, 3), (False, False, False, False)), 'South', 1)
(((6, 4), (False, False, False, False)), 'East', 1)
(((5, 5), (False, False, False, False)), 'North', 1)
(((5, 3), (False, False, False, False)), 'South', 1)
(((6, 4), (False, False, False, False)), 'East', 1)
(((5, 4), (False, False, False, False)), 'North', 1)
(((5, 2), (False, False, False, False)), 'South', 1)
(((6, 3), (False, False, False, False)), 'East', 1)
(((5, 3), (False, False, False, False)), 'North', 1)
(((5, 1), (False, False, False, False)), 'South', 1)
(((6, 2), (False, False, False, False)), 'East', 1)
(((5, 2), (False, False, False, False)), 'North', 1)
corner found (6, 1)
(((6, 1), (False, False, True, False)), 'East', 1)
(((4, 1), (False, False, False, False)), 'West', 1)
(((5, 1), (False, False, False, False)), 'East', 1)
(((3, 1), (False, False, False, False)), 'West', 1)
(((4, 1), (False, False, False, False)), 'East', 1)
(((2, 1), (False, False, False, False)), 'West', 1)
(((3, 1), (False, False, False, False)), 'East', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'East', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'East', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
corner found (4, 1)
(((4, 1), (True, False, False, False)), 'East', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'West', 1)
corner found (5, 1)
(((5, 1), (True, False, False, False)), 'East', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'West', 1)
corner found (5, 2)
(((5, 2), (True, False, False, False)), 'North', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, False, True, False)), 'East', 1)
corner found (4, 1)
(((4, 1), (True, False, False, False)), 'West', 1)
corner found (6, 2)
corner found (6, 2)
(((6, 2), (True, False, True, False)), 'North', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, False, True, False)), 'West', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, False, True, False)), 'North', 1)
corner found (6, 1)
corner found (6, 1)
(((6, 1), (True, False, True, False)), 'South', 1)
corner found (5, 2)
corner found (5, 2)
(((5, 2), (True, False, True, False)), 'West', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, False, True, False)), 'North', 1)
corner found (6, 2)
corner found (6, 2)
(((6, 2), (True, False, True, False)), 'South', 1)
corner found (5, 3)
corner found (5, 3)
(((5, 3), (True, False, True, False)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, False, True, False)), 'North', 1)
corner found (6, 3)
corner found (6, 3)
(((6, 3), (True, False, True, False)), 'South', 1)
corner found (5, 4)
corner found (5, 4)
(((5, 4), (True, False, True, False)), 'West', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, True, True)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, False, True, False)), 'South', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, False, True, False)), 'West', 1)
corner found (6, 5)
corner found (6, 5)
corner found (6, 5)
(((6, 5), (True, False, True, True)), 'South', 1)
corner found (5, 6)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, False, True, True)), 'West', 1)
corner found (5, 5)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, False, True, True)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, False, True, True)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, False, True, True)), 'West', 1)
corner found (5, 6)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, False, True, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, False, True, True)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, False, True, True)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, False, True, True)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, False, True, True)), 'North', 1)
corner found (3, 4)
corner found (3, 4)
corner found (3, 4)
(((3, 4), (True, False, True, True)), 'South', 1)
corner found (3, 5)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, False, True, True)), 'North', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, False, True, True)), 'South', 1)
corner found (3, 4)
corner found (3, 4)
corner found (3, 4)
(((3, 4), (True, False, True, True)), 'North', 1)
corner found (2, 3)
corner found (2, 3)
corner found (2, 3)
(((2, 3), (True, False, True, True)), 'West', 1)
corner found (3, 3)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, False, True, True)), 'East', 1)
corner found (1, 3)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, False, True, True)), 'West', 1)
corner found (1, 4)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, False, True, True)), 'North', 1)
corner found (2, 3)
corner found (2, 3)
corner found (2, 3)
(((2, 3), (True, False, True, True)), 'East', 1)
corner found (1, 5)
corner found (1, 5)
corner found (1, 5)
(((1, 5), (True, False, True, True)), 'North', 1)
corner found (1, 3)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, False, True, True)), 'South', 1)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, True, True)), 'North', 1)
corner found (1, 4)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, False, True, True)), 'South', 1)
*** PASS: heuristic value less than true cost at start state
(((5, 2), (False, False, False, False)), 'North', 1)
(((5, 1), (False, False, False, False)), 'South', 1)
(((6, 2), (False, False, False, False)), 'East', 1)
(((7, 2), (False, False, False, False)), 'East', 1)
(((5, 2), (False, False, False, False)), 'West', 1)
(((8, 2), (False, False, False, False)), 'East', 1)
(((6, 2), (False, False, False, False)), 'West', 1)
(((9, 2), (False, False, False, False)), 'East', 1)
(((7, 2), (False, False, False, False)), 'West', 1)
(((9, 3), (False, False, False, False)), 'North', 1)
(((8, 2), (False, False, False, False)), 'West', 1)
(((9, 4), (False, False, False, False)), 'North', 1)
(((9, 2), (False, False, False, False)), 'South', 1)
(((9, 3), (False, False, False, False)), 'South', 1)
(((10, 4), (False, False, False, False)), 'East', 1)
(((8, 4), (False, False, False, False)), 'West', 1)
(((9, 4), (False, False, False, False)), 'East', 1)
(((7, 4), (False, False, False, False)), 'West', 1)
(((8, 4), (False, False, False, False)), 'East', 1)
(((6, 4), (False, False, False, False)), 'West', 1)
(((7, 4), (False, False, False, False)), 'East', 1)
(((5, 4), (False, False, False, False)), 'West', 1)
(((5, 5), (False, False, False, False)), 'North', 1)
(((6, 4), (False, False, False, False)), 'East', 1)
(((4, 4), (False, False, False, False)), 'West', 1)
(((5, 4), (False, False, False, False)), 'East', 1)
(((3, 4), (False, False, False, False)), 'West', 1)
(((3, 5), (False, False, False, False)), 'North', 1)
(((3, 3), (False, False, False, False)), 'South', 1)
(((4, 4), (False, False, False, False)), 'East', 1)
(((3, 4), (False, False, False, False)), 'North', 1)
(((3, 2), (False, False, False, False)), 'South', 1)
(((3, 3), (False, False, False, False)), 'North', 1)
(((3, 1), (False, False, False, False)), 'South', 1)
(((2, 2), (False, False, False, False)), 'West', 1)
(((3, 2), (False, False, False, False)), 'North', 1)
(((2, 1), (False, False, False, False)), 'West', 1)
(((2, 1), (False, False, False, False)), 'South', 1)
(((3, 2), (False, False, False, False)), 'East', 1)
(((1, 2), (False, False, False, False)), 'West', 1)
(((2, 2), (False, False, False, False)), 'North', 1)
(((3, 1), (False, False, False, False)), 'East', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
(((1, 3), (False, False, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
(((2, 2), (False, False, False, False)), 'East', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'North', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'East', 1)
corner found (1, 3)
(((1, 3), (True, False, False, False)), 'North', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (True, False, False, False)), 'East', 1)
corner found (1, 4)
(((1, 4), (True, False, False, False)), 'North', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'South', 1)
corner found (1, 3)
(((1, 3), (True, False, False, False)), 'South', 1)
(((11, 4), (False, False, False, False)), 'East', 1)
(((9, 4), (False, False, False, False)), 'West', 1)
(((5, 6), (False, False, False, False)), 'North', 1)
(((5, 4), (False, False, False, False)), 'South', 1)
(((3, 6), (False, False, False, False)), 'North', 1)
(((3, 4), (False, False, False, False)), 'South', 1)
(((1, 4), (False, False, False, False)), 'North', 1)
(((1, 2), (False, False, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (True, False, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'East', 1)
corner found (1, 1)
(((1, 1), (True, False, False, False)), 'West', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'South', 1)
corner found (3, 2)
(((3, 2), (True, False, False, False)), 'East', 1)
corner found (1, 2)
(((1, 2), (True, False, False, False)), 'West', 1)
(((11, 3), (False, False, False, False)), 'South', 1)
(((12, 4), (False, False, False, False)), 'East', 1)
(((10, 4), (False, False, False, False)), 'West', 1)
(((5, 7), (False, False, False, False)), 'North', 1)
(((5, 5), (False, False, False, False)), 'South', 1)
(((6, 6), (False, False, False, False)), 'East', 1)
(((4, 6), (False, False, False, False)), 'West', 1)
(((3, 5), (False, False, False, False)), 'South', 1)
(((4, 6), (False, False, False, False)), 'East', 1)
(((2, 6), (False, False, False, False)), 'West', 1)
(((1, 3), (False, False, False, False)), 'South', 1)
corner found (3, 2)
(((3, 2), (True, False, False, False)), 'North', 1)
corner found (2, 1)
(((2, 1), (True, False, False, False)), 'West', 1)
corner found (3, 3)
(((3, 3), (True, False, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (True, False, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (True, False, False, False)), 'West', 1)
(((11, 4), (False, False, False, False)), 'North', 1)
(((11, 2), (False, False, False, False)), 'South', 1)
(((5, 6), (False, False, False, False)), 'East', 1)
(((3, 6), (False, False, False, False)), 'West', 1)
(((3, 6), (False, False, False, False)), 'East', 1)
(((1, 6), (False, False, False, False)), 'West', 1)
corner found (3, 4)
(((3, 4), (True, False, False, False)), 'North', 1)
corner found (3, 2)
(((3, 2), (True, False, False, False)), 'South', 1)
(((11, 3), (False, False, False, False)), 'North', 1)
(((11, 1), (False, False, False, False)), 'South', 1)
(((12, 2), (False, False, False, False)), 'East', 1)
(((1, 7), (False, False, False, False)), 'North', 1)
(((2, 6), (False, False, False, False)), 'East', 1)
corner found (3, 5)
(((3, 5), (True, False, False, False)), 'North', 1)
corner found (3, 3)
(((3, 3), (True, False, False, False)), 'South', 1)
corner found (4, 4)
(((4, 4), (True, False, False, False)), 'East', 1)
(((11, 2), (False, False, False, False)), 'North', 1)
(((12, 1), (False, False, False, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'North', 1)
corner found (3, 4)
(((3, 4), (True, False, False, False)), 'South', 1)
corner found (3, 5)
(((3, 5), (True, False, False, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (True, False, False, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (True, False, False, False)), 'West', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'East', 1)
corner found (1, 6)
(((1, 6), (True, False, False, False)), 'West', 1)
corner found (1, 7)
(((1, 7), (True, False, False, False)), 'North', 1)
corner found (2, 6)
(((2, 6), (True, False, False, False)), 'East', 1)
corner found (1, 8)
(((1, 8), (True, False, False, False)), 'North', 1)
corner found (1, 6)
(((1, 6), (True, False, False, False)), 'South', 1)
corner found (1, 7)
(((1, 7), (True, False, False, False)), 'South', 1)
corner found (2, 8)
(((2, 8), (True, False, False, False)), 'East', 1)
(((5, 8), (False, False, False, False)), 'North', 1)
(((5, 6), (False, False, False, False)), 'South', 1)
(((1, 8), (False, False, False, False)), 'North', 1)
(((1, 6), (False, False, False, False)), 'South', 1)
(((5, 9), (False, False, False, False)), 'North', 1)
(((5, 7), (False, False, False, False)), 'South', 1)
(((1, 7), (False, False, False, False)), 'South', 1)
(((2, 8), (False, False, False, False)), 'East', 1)
(((5, 10), (False, False, False, False)), 'North', 1)
(((5, 8), (False, False, False, False)), 'South', 1)
(((5, 11), (False, False, False, False)), 'North', 1)
(((5, 9), (False, False, False, False)), 'South', 1)
(((6, 10), (False, False, False, False)), 'East', 1)
(((4, 10), (False, False, False, False)), 'West', 1)
(((5, 12), (False, False, False, False)), 'North', 1)
(((5, 10), (False, False, False, False)), 'South', 1)
(((6, 11), (False, False, False, False)), 'East', 1)
(((4, 11), (False, False, False, False)), 'West', 1)
(((4, 11), (False, False, False, False)), 'North', 1)
(((5, 10), (False, False, False, False)), 'East', 1)
(((3, 10), (False, False, False, False)), 'West', 1)
(((5, 11), (False, False, False, False)), 'South', 1)
(((6, 12), (False, False, False, False)), 'East', 1)
(((4, 12), (False, False, False, False)), 'West', 1)
(((4, 12), (False, False, False, False)), 'North', 1)
(((4, 10), (False, False, False, False)), 'South', 1)
(((5, 11), (False, False, False, False)), 'East', 1)
(((3, 11), (False, False, False, False)), 'West', 1)
(((3, 11), (False, False, False, False)), 'North', 1)
(((4, 10), (False, False, False, False)), 'East', 1)
(((2, 10), (False, False, False, False)), 'West', 1)
(((4, 11), (False, False, False, False)), 'South', 1)
(((5, 12), (False, False, False, False)), 'East', 1)
(((3, 12), (False, False, False, False)), 'West', 1)
(((3, 12), (False, False, False, False)), 'North', 1)
(((3, 10), (False, False, False, False)), 'South', 1)
(((4, 11), (False, False, False, False)), 'East', 1)
(((2, 11), (False, False, False, False)), 'West', 1)
(((2, 11), (False, False, False, False)), 'North', 1)
(((3, 10), (False, False, False, False)), 'East', 1)
(((1, 10), (False, False, False, False)), 'West', 1)
(((3, 11), (False, False, False, False)), 'South', 1)
(((4, 12), (False, False, False, False)), 'East', 1)
(((2, 12), (False, False, False, False)), 'West', 1)
(((2, 12), (False, False, False, False)), 'North', 1)
(((2, 10), (False, False, False, False)), 'South', 1)
(((3, 11), (False, False, False, False)), 'East', 1)
(((1, 11), (False, False, False, False)), 'West', 1)
(((1, 11), (False, False, False, False)), 'North', 1)
(((2, 10), (False, False, False, False)), 'East', 1)
(((2, 11), (False, False, False, False)), 'South', 1)
(((3, 12), (False, False, False, False)), 'East', 1)
corner found (1, 12)
(((1, 12), (False, True, False, False)), 'West', 1)
corner found (1, 12)
(((1, 12), (False, True, False, False)), 'North', 1)
(((1, 10), (False, False, False, False)), 'South', 1)
(((2, 11), (False, False, False, False)), 'East', 1)
corner found (1, 11)
(((1, 11), (False, True, False, False)), 'South', 1)
corner found (2, 12)
(((2, 12), (False, True, False, False)), 'East', 1)
corner found (1, 12)
(((1, 12), (False, True, False, False)), 'North', 1)
corner found (1, 10)
(((1, 10), (False, True, False, False)), 'South', 1)
corner found (2, 11)
(((2, 11), (False, True, False, False)), 'East', 1)
corner found (1, 11)
(((1, 11), (False, True, False, False)), 'North', 1)
corner found (2, 10)
(((2, 10), (False, True, False, False)), 'East', 1)
(((13, 4), (False, False, False, False)), 'East', 1)
(((11, 4), (False, False, False, False)), 'West', 1)
(((7, 6), (False, False, False, False)), 'East', 1)
(((5, 6), (False, False, False, False)), 'West', 1)
(((12, 1), (False, False, False, False)), 'South', 1)
(((13, 2), (False, False, False, False)), 'East', 1)
(((11, 2), (False, False, False, False)), 'West', 1)
corner found (5, 4)
(((5, 4), (True, False, False, False)), 'East', 1)
corner found (3, 4)
(((3, 4), (True, False, False, False)), 'West', 1)
(((12, 2), (False, False, False, False)), 'North', 1)
(((13, 1), (False, False, False, False)), 'East', 1)
(((11, 1), (False, False, False, False)), 'West', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (True, False, False, False)), 'West', 1)
corner found (3, 8)
(((3, 8), (True, False, False, False)), 'East', 1)
corner found (1, 8)
(((1, 8), (True, False, False, False)), 'West', 1)
(((3, 8), (False, False, False, False)), 'East', 1)
(((1, 8), (False, False, False, False)), 'West', 1)
(((6, 11), (False, False, False, False)), 'North', 1)
(((7, 10), (False, False, False, False)), 'East', 1)
(((5, 10), (False, False, False, False)), 'West', 1)
(((6, 12), (False, False, False, False)), 'North', 1)
(((6, 10), (False, False, False, False)), 'South', 1)
(((7, 11), (False, False, False, False)), 'East', 1)
(((5, 11), (False, False, False, False)), 'West', 1)
(((6, 11), (False, False, False, False)), 'South', 1)
(((7, 12), (False, False, False, False)), 'East', 1)
(((5, 12), (False, False, False, False)), 'West', 1)
corner found (2, 11)
(((2, 11), (False, True, False, False)), 'South', 1)
corner found (3, 12)
(((3, 12), (False, True, False, False)), 'East', 1)
corner found (1, 12)
(((1, 12), (False, True, False, False)), 'West', 1)
corner found (2, 12)
(((2, 12), (False, True, False, False)), 'North', 1)
corner found (2, 10)
(((2, 10), (False, True, False, False)), 'South', 1)
corner found (3, 11)
(((3, 11), (False, True, False, False)), 'East', 1)
corner found (1, 11)
(((1, 11), (False, True, False, False)), 'West', 1)
corner found (2, 11)
(((2, 11), (False, True, False, False)), 'North', 1)
corner found (3, 10)
(((3, 10), (False, True, False, False)), 'East', 1)
corner found (1, 10)
(((1, 10), (False, True, False, False)), 'West', 1)
(((13, 5), (False, False, False, False)), 'North', 1)
(((12, 4), (False, False, False, False)), 'West', 1)
(((7, 7), (False, False, False, False)), 'North', 1)
(((6, 6), (False, False, False, False)), 'West', 1)
(((13, 1), (False, False, False, False)), 'South', 1)
(((14, 2), (False, False, False, False)), 'East', 1)
(((12, 2), (False, False, False, False)), 'West', 1)
corner found (5, 5)
(((5, 5), (True, False, False, False)), 'North', 1)
corner found (6, 4)
(((6, 4), (True, False, False, False)), 'East', 1)
corner found (4, 4)
(((4, 4), (True, False, False, False)), 'West', 1)
(((13, 2), (False, False, False, False)), 'North', 1)
(((14, 1), (False, False, False, False)), 'East', 1)
(((12, 1), (False, False, False, False)), 'West', 1)
corner found (5, 7)
(((5, 7), (True, False, False, False)), 'North', 1)
corner found (5, 5)
(((5, 5), (True, False, False, False)), 'South', 1)
corner found (6, 6)
(((6, 6), (True, False, False, False)), 'East', 1)
corner found (4, 6)
(((4, 6), (True, False, False, False)), 'West', 1)
corner found (2, 8)
(((2, 8), (True, False, False, False)), 'West', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'North', 1)
corner found (5, 4)
(((5, 4), (True, False, False, False)), 'South', 1)
corner found (5, 8)
(((5, 8), (True, False, False, False)), 'North', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'South', 1)
corner found (5, 9)
(((5, 9), (True, False, False, False)), 'North', 1)
corner found (5, 7)
(((5, 7), (True, False, False, False)), 'South', 1)
corner found (5, 10)
(((5, 10), (True, False, False, False)), 'North', 1)
corner found (5, 8)
(((5, 8), (True, False, False, False)), 'South', 1)
corner found (5, 11)
(((5, 11), (True, False, False, False)), 'North', 1)
corner found (5, 9)
(((5, 9), (True, False, False, False)), 'South', 1)
corner found (6, 10)
(((6, 10), (True, False, False, False)), 'East', 1)
corner found (4, 10)
(((4, 10), (True, False, False, False)), 'West', 1)
corner found (5, 12)
(((5, 12), (True, False, False, False)), 'North', 1)
corner found (5, 10)
(((5, 10), (True, False, False, False)), 'South', 1)
corner found (6, 11)
(((6, 11), (True, False, False, False)), 'East', 1)
corner found (4, 11)
(((4, 11), (True, False, False, False)), 'West', 1)
corner found (4, 11)
(((4, 11), (True, False, False, False)), 'North', 1)
corner found (5, 10)
(((5, 10), (True, False, False, False)), 'East', 1)
corner found (3, 10)
(((3, 10), (True, False, False, False)), 'West', 1)
corner found (5, 11)
(((5, 11), (True, False, False, False)), 'South', 1)
corner found (6, 12)
(((6, 12), (True, False, False, False)), 'East', 1)
corner found (4, 12)
(((4, 12), (True, False, False, False)), 'West', 1)
corner found (4, 12)
(((4, 12), (True, False, False, False)), 'North', 1)
corner found (4, 10)
(((4, 10), (True, False, False, False)), 'South', 1)
corner found (5, 11)
(((5, 11), (True, False, False, False)), 'East', 1)
corner found (3, 11)
(((3, 11), (True, False, False, False)), 'West', 1)
corner found (3, 11)
(((3, 11), (True, False, False, False)), 'North', 1)
corner found (4, 10)
(((4, 10), (True, False, False, False)), 'East', 1)
corner found (2, 10)
(((2, 10), (True, False, False, False)), 'West', 1)
corner found (4, 11)
(((4, 11), (True, False, False, False)), 'South', 1)
corner found (5, 12)
(((5, 12), (True, False, False, False)), 'East', 1)
corner found (3, 12)
(((3, 12), (True, False, False, False)), 'West', 1)
corner found (3, 12)
(((3, 12), (True, False, False, False)), 'North', 1)
corner found (3, 10)
(((3, 10), (True, False, False, False)), 'South', 1)
corner found (4, 11)
(((4, 11), (True, False, False, False)), 'East', 1)
corner found (2, 11)
(((2, 11), (True, False, False, False)), 'West', 1)
corner found (2, 11)
(((2, 11), (True, False, False, False)), 'North', 1)
corner found (3, 10)
(((3, 10), (True, False, False, False)), 'East', 1)
corner found (1, 10)
(((1, 10), (True, False, False, False)), 'West', 1)
corner found (3, 11)
(((3, 11), (True, False, False, False)), 'South', 1)
corner found (4, 12)
(((4, 12), (True, False, False, False)), 'East', 1)
corner found (2, 12)
(((2, 12), (True, False, False, False)), 'West', 1)
corner found (2, 12)
(((2, 12), (True, False, False, False)), 'North', 1)
corner found (2, 10)
(((2, 10), (True, False, False, False)), 'South', 1)
corner found (3, 11)
(((3, 11), (True, False, False, False)), 'East', 1)
corner found (1, 11)
(((1, 11), (True, False, False, False)), 'West', 1)
corner found (1, 11)
(((1, 11), (True, False, False, False)), 'North', 1)
corner found (2, 10)
(((2, 10), (True, False, False, False)), 'East', 1)
corner found (2, 11)
(((2, 11), (True, False, False, False)), 'South', 1)
corner found (3, 12)
(((3, 12), (True, False, False, False)), 'East', 1)
corner found (1, 12)
corner found (1, 12)
(((1, 12), (True, True, False, False)), 'West', 1)
corner found (1, 12)
corner found (1, 12)
(((1, 12), (True, True, False, False)), 'North', 1)
corner found (1, 10)
(((1, 10), (True, False, False, False)), 'South', 1)
corner found (2, 11)
(((2, 11), (True, False, False, False)), 'East', 1)
corner found (1, 11)
corner found (1, 11)
(((1, 11), (True, True, False, False)), 'South', 1)
corner found (2, 12)
corner found (2, 12)
(((2, 12), (True, True, False, False)), 'East', 1)
corner found (2, 11)
corner found (2, 11)
(((2, 11), (True, True, False, False)), 'South', 1)
corner found (3, 12)
corner found (3, 12)
(((3, 12), (True, True, False, False)), 'East', 1)
corner found (1, 12)
corner found (1, 12)
(((1, 12), (True, True, False, False)), 'West', 1)
corner found (3, 11)
corner found (3, 11)
(((3, 11), (True, True, False, False)), 'South', 1)
corner found (4, 12)
corner found (4, 12)
(((4, 12), (True, True, False, False)), 'East', 1)
corner found (2, 12)
corner found (2, 12)
(((2, 12), (True, True, False, False)), 'West', 1)
corner found (4, 11)
corner found (4, 11)
(((4, 11), (True, True, False, False)), 'South', 1)
corner found (5, 12)
corner found (5, 12)
(((5, 12), (True, True, False, False)), 'East', 1)
corner found (3, 12)
corner found (3, 12)
(((3, 12), (True, True, False, False)), 'West', 1)
corner found (5, 11)
corner found (5, 11)
(((5, 11), (True, True, False, False)), 'South', 1)
corner found (6, 12)
corner found (6, 12)
(((6, 12), (True, True, False, False)), 'East', 1)
corner found (4, 12)
corner found (4, 12)
(((4, 12), (True, True, False, False)), 'West', 1)
corner found (6, 11)
corner found (6, 11)
(((6, 11), (True, True, False, False)), 'South', 1)
corner found (7, 12)
corner found (7, 12)
(((7, 12), (True, True, False, False)), 'East', 1)
corner found (5, 12)
corner found (5, 12)
(((5, 12), (True, True, False, False)), 'West', 1)
corner found (7, 11)
corner found (7, 11)
(((7, 11), (True, True, False, False)), 'South', 1)
corner found (6, 12)
corner found (6, 12)
(((6, 12), (True, True, False, False)), 'West', 1)
(((2, 8), (False, False, False, False)), 'West', 1)
(((7, 11), (False, False, False, False)), 'North', 1)
(((6, 10), (False, False, False, False)), 'West', 1)
(((7, 12), (False, False, False, False)), 'North', 1)
(((7, 10), (False, False, False, False)), 'South', 1)
(((6, 11), (False, False, False, False)), 'West', 1)
(((7, 11), (False, False, False, False)), 'South', 1)
(((6, 12), (False, False, False, False)), 'West', 1)
corner found (3, 11)
(((3, 11), (False, True, False, False)), 'South', 1)
corner found (4, 12)
(((4, 12), (False, True, False, False)), 'East', 1)
corner found (2, 12)
(((2, 12), (False, True, False, False)), 'West', 1)
corner found (3, 12)
(((3, 12), (False, True, False, False)), 'North', 1)
corner found (3, 10)
(((3, 10), (False, True, False, False)), 'South', 1)
corner found (4, 11)
(((4, 11), (False, True, False, False)), 'East', 1)
corner found (2, 11)
(((2, 11), (False, True, False, False)), 'West', 1)
corner found (3, 11)
(((3, 11), (False, True, False, False)), 'North', 1)
corner found (4, 10)
(((4, 10), (False, True, False, False)), 'East', 1)
corner found (2, 10)
(((2, 10), (False, True, False, False)), 'West', 1)
(((7, 8), (False, False, False, False)), 'North', 1)
(((7, 6), (False, False, False, False)), 'South', 1)
(((7, 7), (False, False, False, False)), 'South', 1)
(((13, 6), (False, False, False, False)), 'North', 1)
(((13, 4), (False, False, False, False)), 'South', 1)
(((14, 1), (False, False, False, False)), 'South', 1)
(((15, 2), (False, False, False, False)), 'East', 1)
(((13, 2), (False, False, False, False)), 'West', 1)
corner found (7, 4)
(((7, 4), (True, False, False, False)), 'East', 1)
corner found (5, 4)
(((5, 4), (True, False, False, False)), 'West', 1)
(((14, 2), (False, False, False, False)), 'North', 1)
(((15, 1), (False, False, False, False)), 'East', 1)
(((13, 1), (False, False, False, False)), 'West', 1)
corner found (7, 6)
(((7, 6), (True, False, False, False)), 'East', 1)
corner found (5, 6)
(((5, 6), (True, False, False, False)), 'West', 1)
corner found (6, 11)
(((6, 11), (True, False, False, False)), 'North', 1)
corner found (7, 10)
(((7, 10), (True, False, False, False)), 'East', 1)
corner found (5, 10)
(((5, 10), (True, False, False, False)), 'West', 1)
corner found (6, 12)
(((6, 12), (True, False, False, False)), 'North', 1)
corner found (6, 10)
(((6, 10), (True, False, False, False)), 'South', 1)
corner found (7, 11)
(((7, 11), (True, False, False, False)), 'East', 1)
corner found (5, 11)
(((5, 11), (True, False, False, False)), 'West', 1)
corner found (6, 11)
(((6, 11), (True, False, False, False)), 'South', 1)
corner found (7, 12)
(((7, 12), (True, False, False, False)), 'East', 1)
corner found (5, 12)
(((5, 12), (True, False, False, False)), 'West', 1)
corner found (1, 12)
corner found (1, 12)
(((1, 12), (True, True, False, False)), 'North', 1)
corner found (1, 10)
corner found (1, 10)
(((1, 10), (True, True, False, False)), 'South', 1)
corner found (2, 11)
corner found (2, 11)
(((2, 11), (True, True, False, False)), 'East', 1)
corner found (2, 12)
corner found (2, 12)
(((2, 12), (True, True, False, False)), 'North', 1)
corner found (2, 10)
corner found (2, 10)
(((2, 10), (True, True, False, False)), 'South', 1)
corner found (3, 11)
corner found (3, 11)
(((3, 11), (True, True, False, False)), 'East', 1)
corner found (1, 11)
corner found (1, 11)
(((1, 11), (True, True, False, False)), 'West', 1)
corner found (3, 12)
corner found (3, 12)
(((3, 12), (True, True, False, False)), 'North', 1)
corner found (3, 10)
corner found (3, 10)
(((3, 10), (True, True, False, False)), 'South', 1)
corner found (4, 11)
corner found (4, 11)
(((4, 11), (True, True, False, False)), 'East', 1)
corner found (2, 11)
corner found (2, 11)
(((2, 11), (True, True, False, False)), 'West', 1)
corner found (4, 12)
corner found (4, 12)
(((4, 12), (True, True, False, False)), 'North', 1)
corner found (4, 10)
corner found (4, 10)
(((4, 10), (True, True, False, False)), 'South', 1)
corner found (5, 11)
corner found (5, 11)
(((5, 11), (True, True, False, False)), 'East', 1)
corner found (3, 11)
corner found (3, 11)
(((3, 11), (True, True, False, False)), 'West', 1)
corner found (5, 12)
corner found (5, 12)
(((5, 12), (True, True, False, False)), 'North', 1)
corner found (5, 10)
corner found (5, 10)
(((5, 10), (True, True, False, False)), 'South', 1)
corner found (6, 11)
corner found (6, 11)
(((6, 11), (True, True, False, False)), 'East', 1)
corner found (4, 11)
corner found (4, 11)
(((4, 11), (True, True, False, False)), 'West', 1)
corner found (6, 12)
corner found (6, 12)
(((6, 12), (True, True, False, False)), 'North', 1)
corner found (6, 10)
corner found (6, 10)
(((6, 10), (True, True, False, False)), 'South', 1)
corner found (7, 11)
corner found (7, 11)
(((7, 11), (True, True, False, False)), 'East', 1)
corner found (5, 11)
corner found (5, 11)
(((5, 11), (True, True, False, False)), 'West', 1)
corner found (7, 12)
corner found (7, 12)
(((7, 12), (True, True, False, False)), 'North', 1)
corner found (7, 10)
corner found (7, 10)
(((7, 10), (True, True, False, False)), 'South', 1)
corner found (6, 11)
corner found (6, 11)
(((6, 11), (True, True, False, False)), 'West', 1)
corner found (4, 11)
(((4, 11), (False, True, False, False)), 'South', 1)
corner found (5, 12)
(((5, 12), (False, True, False, False)), 'East', 1)
corner found (3, 12)
(((3, 12), (False, True, False, False)), 'West', 1)
corner found (4, 12)
(((4, 12), (False, True, False, False)), 'North', 1)
corner found (4, 10)
(((4, 10), (False, True, False, False)), 'South', 1)
corner found (5, 11)
(((5, 11), (False, True, False, False)), 'East', 1)
corner found (3, 11)
(((3, 11), (False, True, False, False)), 'West', 1)
corner found (4, 11)
(((4, 11), (False, True, False, False)), 'North', 1)
corner found (5, 10)
(((5, 10), (False, True, False, False)), 'East', 1)
corner found (3, 10)
(((3, 10), (False, True, False, False)), 'West', 1)
(((15, 1), (False, False, False, False)), 'South', 1)
(((16, 2), (False, False, False, False)), 'East', 1)
(((14, 2), (False, False, False, False)), 'West', 1)
(((15, 2), (False, False, False, False)), 'North', 1)
(((16, 1), (False, False, False, False)), 'East', 1)
(((14, 1), (False, False, False, False)), 'West', 1)
(((16, 3), (False, False, False, False)), 'North', 1)
(((16, 1), (False, False, False, False)), 'South', 1)
(((15, 2), (False, False, False, False)), 'West', 1)
(((16, 2), (False, False, False, False)), 'North', 1)
(((15, 1), (False, False, False, False)), 'West', 1)
(((13, 5), (False, False, False, False)), 'South', 1)
(((12, 6), (False, False, False, False)), 'West', 1)
corner found (8, 4)
(((8, 4), (True, False, False, False)), 'East', 1)
corner found (6, 4)
(((6, 4), (True, False, False, False)), 'West', 1)
corner found (7, 7)
(((7, 7), (True, False, False, False)), 'North', 1)
corner found (6, 6)
(((6, 6), (True, False, False, False)), 'West', 1)
corner found (7, 11)
(((7, 11), (True, False, False, False)), 'North', 1)
corner found (6, 10)
(((6, 10), (True, False, False, False)), 'West', 1)
corner found (7, 12)
(((7, 12), (True, False, False, False)), 'North', 1)
corner found (7, 10)
(((7, 10), (True, False, False, False)), 'South', 1)
corner found (6, 11)
(((6, 11), (True, False, False, False)), 'West', 1)
corner found (7, 11)
(((7, 11), (True, False, False, False)), 'South', 1)
corner found (6, 12)
(((6, 12), (True, False, False, False)), 'West', 1)
corner found (1, 11)
corner found (1, 11)
(((1, 11), (True, True, False, False)), 'North', 1)
corner found (2, 10)
corner found (2, 10)
(((2, 10), (True, True, False, False)), 'East', 1)
corner found (2, 11)
corner found (2, 11)
(((2, 11), (True, True, False, False)), 'North', 1)
corner found (3, 10)
corner found (3, 10)
(((3, 10), (True, True, False, False)), 'East', 1)
corner found (1, 10)
corner found (1, 10)
(((1, 10), (True, True, False, False)), 'West', 1)
corner found (3, 11)
corner found (3, 11)
(((3, 11), (True, True, False, False)), 'North', 1)
corner found (4, 10)
corner found (4, 10)
(((4, 10), (True, True, False, False)), 'East', 1)
corner found (2, 10)
corner found (2, 10)
(((2, 10), (True, True, False, False)), 'West', 1)
corner found (4, 11)
corner found (4, 11)
(((4, 11), (True, True, False, False)), 'North', 1)
corner found (5, 10)
corner found (5, 10)
(((5, 10), (True, True, False, False)), 'East', 1)
corner found (3, 10)
corner found (3, 10)
(((3, 10), (True, True, False, False)), 'West', 1)
corner found (5, 11)
corner found (5, 11)
(((5, 11), (True, True, False, False)), 'North', 1)
corner found (5, 9)
corner found (5, 9)
(((5, 9), (True, True, False, False)), 'South', 1)
corner found (6, 10)
corner found (6, 10)
(((6, 10), (True, True, False, False)), 'East', 1)
corner found (4, 10)
corner found (4, 10)
(((4, 10), (True, True, False, False)), 'West', 1)
corner found (6, 11)
corner found (6, 11)
(((6, 11), (True, True, False, False)), 'North', 1)
corner found (7, 10)
corner found (7, 10)
(((7, 10), (True, True, False, False)), 'East', 1)
corner found (5, 10)
corner found (5, 10)
(((5, 10), (True, True, False, False)), 'West', 1)
corner found (7, 11)
corner found (7, 11)
(((7, 11), (True, True, False, False)), 'North', 1)
corner found (6, 10)
corner found (6, 10)
(((6, 10), (True, True, False, False)), 'West', 1)
(((13, 6), (False, False, False, False)), 'East', 1)
(((11, 6), (False, False, False, False)), 'West', 1)
corner found (7, 8)
(((7, 8), (True, False, False, False)), 'North', 1)
corner found (7, 6)
(((7, 6), (True, False, False, False)), 'South', 1)
(((11, 7), (False, False, False, False)), 'North', 1)
(((12, 6), (False, False, False, False)), 'East', 1)
(((10, 6), (False, False, False, False)), 'West', 1)
corner found (7, 7)
(((7, 7), (True, False, False, False)), 'South', 1)
(((11, 6), (False, False, False, False)), 'East', 1)
(((9, 6), (False, False, False, False)), 'West', 1)
(((9, 7), (False, False, False, False)), 'North', 1)
(((10, 6), (False, False, False, False)), 'East', 1)
corner found (5, 11)
(((5, 11), (False, True, False, False)), 'South', 1)
corner found (6, 12)
(((6, 12), (False, True, False, False)), 'East', 1)
corner found (4, 12)
(((4, 12), (False, True, False, False)), 'West', 1)
corner found (5, 12)
(((5, 12), (False, True, False, False)), 'North', 1)
corner found (5, 10)
(((5, 10), (False, True, False, False)), 'South', 1)
corner found (6, 11)
(((6, 11), (False, True, False, False)), 'East', 1)
corner found (4, 11)
(((4, 11), (False, True, False, False)), 'West', 1)
corner found (5, 11)
(((5, 11), (False, True, False, False)), 'North', 1)
corner found (5, 9)
(((5, 9), (False, True, False, False)), 'South', 1)
corner found (6, 10)
(((6, 10), (False, True, False, False)), 'East', 1)
corner found (4, 10)
(((4, 10), (False, True, False, False)), 'West', 1)
(((16, 4), (False, False, False, False)), 'North', 1)
(((16, 2), (False, False, False, False)), 'South', 1)
(((11, 8), (False, False, False, False)), 'North', 1)
(((11, 6), (False, False, False, False)), 'South', 1)
(((9, 8), (False, False, False, False)), 'North', 1)
(((9, 6), (False, False, False, False)), 'South', 1)
corner found (5, 10)
(((5, 10), (False, True, False, False)), 'North', 1)
corner found (5, 8)
(((5, 8), (False, True, False, False)), 'South', 1)
(((11, 9), (False, False, False, False)), 'North', 1)
(((11, 7), (False, False, False, False)), 'South', 1)
(((12, 8), (False, False, False, False)), 'East', 1)
(((9, 7), (False, False, False, False)), 'South', 1)
corner found (5, 9)
(((5, 9), (False, True, False, False)), 'North', 1)
corner found (5, 7)
(((5, 7), (False, True, False, False)), 'South', 1)
(((11, 10), (False, False, False, False)), 'North', 1)
(((11, 8), (False, False, False, False)), 'South', 1)
corner found (5, 8)
(((5, 8), (False, True, False, False)), 'North', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'South', 1)
(((11, 11), (False, False, False, False)), 'North', 1)
(((11, 9), (False, False, False, False)), 'South', 1)
(((12, 10), (False, False, False, False)), 'East', 1)
(((10, 10), (False, False, False, False)), 'West', 1)
corner found (5, 7)
(((5, 7), (False, True, False, False)), 'North', 1)
corner found (5, 5)
(((5, 5), (False, True, False, False)), 'South', 1)
corner found (6, 6)
(((6, 6), (False, True, False, False)), 'East', 1)
corner found (4, 6)
(((4, 6), (False, True, False, False)), 'West', 1)
(((11, 12), (False, False, False, False)), 'North', 1)
(((11, 10), (False, False, False, False)), 'South', 1)
(((11, 10), (False, False, False, False)), 'East', 1)
(((9, 10), (False, False, False, False)), 'West', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'North', 1)
corner found (5, 4)
(((5, 4), (False, True, False, False)), 'South', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'East', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'West', 1)
(((11, 11), (False, False, False, False)), 'South', 1)
(((9, 11), (False, False, False, False)), 'North', 1)
(((10, 10), (False, False, False, False)), 'East', 1)
corner found (5, 5)
(((5, 5), (False, True, False, False)), 'North', 1)
corner found (6, 4)
(((6, 4), (False, True, False, False)), 'East', 1)
corner found (4, 4)
(((4, 4), (False, True, False, False)), 'West', 1)
corner found (3, 5)
(((3, 5), (False, True, False, False)), 'South', 1)
corner found (4, 6)
(((4, 6), (False, True, False, False)), 'East', 1)
corner found (2, 6)
(((2, 6), (False, True, False, False)), 'West', 1)
(((9, 12), (False, False, False, False)), 'North', 1)
(((9, 10), (False, False, False, False)), 'South', 1)
corner found (5, 4)
(((5, 4), (False, True, False, False)), 'East', 1)
corner found (3, 4)
(((3, 4), (False, True, False, False)), 'West', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'North', 1)
corner found (3, 4)
(((3, 4), (False, True, False, False)), 'South', 1)
corner found (3, 6)
(((3, 6), (False, True, False, False)), 'East', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'West', 1)
(((9, 11), (False, False, False, False)), 'South', 1)
corner found (3, 5)
(((3, 5), (False, True, False, False)), 'North', 1)
corner found (3, 3)
(((3, 3), (False, True, False, False)), 'South', 1)
corner found (4, 4)
(((4, 4), (False, True, False, False)), 'East', 1)
corner found (1, 7)
(((1, 7), (False, True, False, False)), 'North', 1)
corner found (2, 6)
(((2, 6), (False, True, False, False)), 'East', 1)
corner found (3, 4)
(((3, 4), (False, True, False, False)), 'North', 1)
corner found (3, 2)
(((3, 2), (False, True, False, False)), 'South', 1)
corner found (3, 3)
(((3, 3), (False, True, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (False, True, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (False, True, False, False)), 'West', 1)
corner found (3, 2)
(((3, 2), (False, True, False, False)), 'North', 1)
corner found (2, 1)
(((2, 1), (False, True, False, False)), 'West', 1)
corner found (2, 1)
(((2, 1), (False, True, False, False)), 'South', 1)
corner found (3, 2)
(((3, 2), (False, True, False, False)), 'East', 1)
corner found (1, 2)
(((1, 2), (False, True, False, False)), 'West', 1)
corner found (2, 2)
(((2, 2), (False, True, False, False)), 'North', 1)
corner found (3, 1)
(((3, 1), (False, True, False, False)), 'East', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'West', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'South', 1)
corner found (2, 2)
(((2, 2), (False, True, False, False)), 'East', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'North', 1)
corner found (2, 1)
corner found (2, 1)
(((2, 1), (True, True, False, False)), 'East', 1)
corner found (2, 2)
corner found (2, 2)
(((2, 2), (True, True, False, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, False)), 'East', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'West', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'North', 1)
corner found (2, 1)
corner found (2, 1)
(((2, 1), (True, True, False, False)), 'West', 1)
corner found (9, 4)
(((9, 4), (True, False, False, False)), 'East', 1)
corner found (7, 4)
(((7, 4), (True, False, False, False)), 'West', 1)
corner found (5, 10)
corner found (5, 10)
(((5, 10), (True, True, False, False)), 'North', 1)
corner found (5, 8)
corner found (5, 8)
(((5, 8), (True, True, False, False)), 'South', 1)
corner found (6, 11)
(((6, 11), (False, True, False, False)), 'South', 1)
corner found (7, 12)
(((7, 12), (False, True, False, False)), 'East', 1)
corner found (5, 12)
(((5, 12), (False, True, False, False)), 'West', 1)
corner found (6, 12)
(((6, 12), (False, True, False, False)), 'North', 1)
corner found (6, 10)
(((6, 10), (False, True, False, False)), 'South', 1)
corner found (7, 11)
(((7, 11), (False, True, False, False)), 'East', 1)
corner found (5, 11)
(((5, 11), (False, True, False, False)), 'West', 1)
corner found (6, 11)
(((6, 11), (False, True, False, False)), 'North', 1)
corner found (7, 10)
(((7, 10), (False, True, False, False)), 'East', 1)
corner found (5, 10)
(((5, 10), (False, True, False, False)), 'West', 1)
(((16, 3), (False, False, False, False)), 'South', 1)
(((17, 4), (False, False, False, False)), 'East', 1)
(((13, 8), (False, False, False, False)), 'East', 1)
(((11, 8), (False, False, False, False)), 'West', 1)
(((13, 10), (False, False, False, False)), 'East', 1)
(((11, 10), (False, False, False, False)), 'West', 1)
corner found (7, 6)
(((7, 6), (False, True, False, False)), 'East', 1)
corner found (5, 6)
(((5, 6), (False, True, False, False)), 'West', 1)
corner found (7, 4)
(((7, 4), (False, True, False, False)), 'East', 1)
corner found (5, 4)
(((5, 4), (False, True, False, False)), 'West', 1)
corner found (1, 8)
(((1, 8), (False, True, False, False)), 'North', 1)
corner found (1, 6)
(((1, 6), (False, True, False, False)), 'South', 1)
corner found (1, 4)
(((1, 4), (False, True, False, False)), 'North', 1)
corner found (1, 2)
(((1, 2), (False, True, False, False)), 'South', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'North', 1)
corner found (1, 1)
corner found (1, 1)
(((1, 1), (True, True, False, False)), 'South', 1)
corner found (2, 2)
corner found (2, 2)
(((2, 2), (True, True, False, False)), 'East', 1)
corner found (2, 1)
corner found (2, 1)
(((2, 1), (True, True, False, False)), 'South', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'East', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'West', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, False)), 'North', 1)
corner found (3, 1)
corner found (3, 1)
(((3, 1), (True, True, False, False)), 'South', 1)
corner found (2, 2)
corner found (2, 2)
(((2, 2), (True, True, False, False)), 'West', 1)
(((18, 4), (False, False, False, False)), 'East', 1)
(((16, 4), (False, False, False, False)), 'West', 1)
(((18, 5), (False, False, False, False)), 'North', 1)
(((18, 3), (False, False, False, False)), 'South', 1)
(((19, 4), (False, False, False, False)), 'East', 1)
(((17, 4), (False, False, False, False)), 'West', 1)
(((18, 4), (False, False, False, False)), 'North', 1)
(((18, 2), (False, False, False, False)), 'South', 1)
(((20, 4), (False, False, False, False)), 'East', 1)
(((18, 4), (False, False, False, False)), 'West', 1)
(((18, 3), (False, False, False, False)), 'North', 1)
(((18, 1), (False, False, False, False)), 'South', 1)
(((19, 4), (False, False, False, False)), 'West', 1)
(((18, 2), (False, False, False, False)), 'North', 1)
corner found (9, 3)
(((9, 3), (True, False, False, False)), 'South', 1)
corner found (10, 4)
(((10, 4), (True, False, False, False)), 'East', 1)
corner found (8, 4)
(((8, 4), (True, False, False, False)), 'West', 1)
corner found (5, 9)
corner found (5, 9)
(((5, 9), (True, True, False, False)), 'North', 1)
corner found (5, 7)
corner found (5, 7)
(((5, 7), (True, True, False, False)), 'South', 1)
corner found (7, 11)
(((7, 11), (False, True, False, False)), 'South', 1)
corner found (6, 12)
(((6, 12), (False, True, False, False)), 'West', 1)
corner found (7, 12)
(((7, 12), (False, True, False, False)), 'North', 1)
corner found (7, 10)
(((7, 10), (False, True, False, False)), 'South', 1)
corner found (6, 11)
(((6, 11), (False, True, False, False)), 'West', 1)
corner found (7, 11)
(((7, 11), (False, True, False, False)), 'North', 1)
corner found (6, 10)
(((6, 10), (False, True, False, False)), 'West', 1)
(((12, 8), (False, False, False, False)), 'West', 1)
(((14, 10), (False, False, False, False)), 'East', 1)
(((12, 10), (False, False, False, False)), 'West', 1)
corner found (7, 7)
(((7, 7), (False, True, False, False)), 'North', 1)
corner found (6, 6)
(((6, 6), (False, True, False, False)), 'West', 1)
corner found (8, 4)
(((8, 4), (False, True, False, False)), 'East', 1)
corner found (6, 4)
(((6, 4), (False, True, False, False)), 'West', 1)
corner found (1, 7)
(((1, 7), (False, True, False, False)), 'South', 1)
corner found (2, 8)
(((2, 8), (False, True, False, False)), 'East', 1)
corner found (1, 3)
(((1, 3), (False, True, False, False)), 'South', 1)
corner found (1, 4)
corner found (1, 4)
(((1, 4), (True, True, False, False)), 'North', 1)
corner found (1, 2)
corner found (1, 2)
(((1, 2), (True, True, False, False)), 'South', 1)
corner found (3, 4)
corner found (3, 4)
(((3, 4), (True, True, False, False)), 'North', 1)
corner found (3, 2)
corner found (3, 2)
(((3, 2), (True, True, False, False)), 'South', 1)
(((18, 6), (False, False, False, False)), 'North', 1)
(((18, 4), (False, False, False, False)), 'South', 1)
corner found (9, 4)
(((9, 4), (True, False, False, False)), 'North', 1)
corner found (9, 2)
(((9, 2), (True, False, False, False)), 'South', 1)
corner found (11, 4)
(((11, 4), (True, False, False, False)), 'East', 1)
corner found (9, 4)
(((9, 4), (True, False, False, False)), 'West', 1)
corner found (5, 8)
corner found (5, 8)
(((5, 8), (True, True, False, False)), 'North', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'South', 1)
(((15, 10), (False, False, False, False)), 'East', 1)
(((13, 10), (False, False, False, False)), 'West', 1)
corner found (7, 8)
(((7, 8), (False, True, False, False)), 'North', 1)
corner found (7, 6)
(((7, 6), (False, True, False, False)), 'South', 1)
corner found (9, 4)
(((9, 4), (False, True, False, False)), 'East', 1)
corner found (7, 4)
(((7, 4), (False, True, False, False)), 'West', 1)
corner found (3, 8)
(((3, 8), (False, True, False, False)), 'East', 1)
corner found (1, 8)
(((1, 8), (False, True, False, False)), 'West', 1)
corner found (1, 3)
corner found (1, 3)
(((1, 3), (True, True, False, False)), 'South', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, False)), 'North', 1)
corner found (3, 3)
corner found (3, 3)
(((3, 3), (True, True, False, False)), 'South', 1)
corner found (4, 4)
corner found (4, 4)
(((4, 4), (True, True, False, False)), 'East', 1)
(((18, 5), (False, False, False, False)), 'South', 1)
(((19, 6), (False, False, False, False)), 'East', 1)
(((17, 6), (False, False, False, False)), 'West', 1)
corner found (5, 7)
corner found (5, 7)
(((5, 7), (True, True, False, False)), 'North', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, False)), 'South', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, False)), 'East', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, False)), 'West', 1)
corner found (5, 4)
corner found (5, 4)
(((5, 4), (True, True, False, False)), 'East', 1)
corner found (3, 4)
corner found (3, 4)
(((3, 4), (True, True, False, False)), 'West', 1)
(((20, 6), (False, False, False, False)), 'East', 1)
(((18, 6), (False, False, False, False)), 'West', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'North', 1)
corner found (5, 4)
corner found (5, 4)
(((5, 4), (True, True, False, False)), 'South', 1)
corner found (7, 6)
corner found (7, 6)
(((7, 6), (True, True, False, False)), 'East', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'West', 1)
corner found (5, 5)
corner found (5, 5)
(((5, 5), (True, True, False, False)), 'North', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, False)), 'East', 1)
corner found (4, 4)
corner found (4, 4)
(((4, 4), (True, True, False, False)), 'West', 1)
(((20, 7), (False, False, False, False)), 'North', 1)
(((19, 6), (False, False, False, False)), 'West', 1)
corner found (7, 7)
corner found (7, 7)
(((7, 7), (True, True, False, False)), 'North', 1)
corner found (6, 6)
corner found (6, 6)
(((6, 6), (True, True, False, False)), 'West', 1)
corner found (7, 4)
corner found (7, 4)
(((7, 4), (True, True, False, False)), 'East', 1)
corner found (5, 4)
corner found (5, 4)
(((5, 4), (True, True, False, False)), 'West', 1)
corner found (8, 4)
corner found (8, 4)
(((8, 4), (True, True, False, False)), 'East', 1)
corner found (6, 4)
corner found (6, 4)
(((6, 4), (True, True, False, False)), 'West', 1)
corner found (9, 4)
corner found (9, 4)
(((9, 4), (True, True, False, False)), 'East', 1)
corner found (7, 4)
corner found (7, 4)
(((7, 4), (True, True, False, False)), 'West', 1)
corner found (9, 3)
corner found (9, 3)
(((9, 3), (True, True, False, False)), 'South', 1)
corner found (10, 4)
corner found (10, 4)
(((10, 4), (True, True, False, False)), 'East', 1)
corner found (8, 4)
corner found (8, 4)
(((8, 4), (True, True, False, False)), 'West', 1)
corner found (9, 4)
corner found (9, 4)
(((9, 4), (True, True, False, False)), 'North', 1)
corner found (9, 2)
corner found (9, 2)
(((9, 2), (True, True, False, False)), 'South', 1)
corner found (11, 4)
corner found (11, 4)
(((11, 4), (True, True, False, False)), 'East', 1)
corner found (9, 4)
corner found (9, 4)
(((9, 4), (True, True, False, False)), 'West', 1)
corner found (9, 3)
corner found (9, 3)
(((9, 3), (True, True, False, False)), 'North', 1)
corner found (8, 2)
corner found (8, 2)
(((8, 2), (True, True, False, False)), 'West', 1)
corner found (11, 3)
corner found (11, 3)
(((11, 3), (True, True, False, False)), 'South', 1)
corner found (12, 4)
corner found (12, 4)
(((12, 4), (True, True, False, False)), 'East', 1)
corner found (10, 4)
corner found (10, 4)
(((10, 4), (True, True, False, False)), 'West', 1)
corner found (11, 4)
corner found (11, 4)
(((11, 4), (True, True, False, False)), 'North', 1)
corner found (11, 2)
corner found (11, 2)
(((11, 2), (True, True, False, False)), 'South', 1)
corner found (13, 4)
corner found (13, 4)
(((13, 4), (True, True, False, False)), 'East', 1)
corner found (11, 4)
corner found (11, 4)
(((11, 4), (True, True, False, False)), 'West', 1)
corner found (11, 3)
corner found (11, 3)
(((11, 3), (True, True, False, False)), 'North', 1)
corner found (11, 1)
corner found (11, 1)
(((11, 1), (True, True, False, False)), 'South', 1)
corner found (12, 2)
corner found (12, 2)
(((12, 2), (True, True, False, False)), 'East', 1)
corner found (13, 5)
corner found (13, 5)
(((13, 5), (True, True, False, False)), 'North', 1)
corner found (12, 4)
corner found (12, 4)
(((12, 4), (True, True, False, False)), 'West', 1)
corner found (11, 2)
corner found (11, 2)
(((11, 2), (True, True, False, False)), 'North', 1)
corner found (12, 1)
corner found (12, 1)
(((12, 1), (True, True, False, False)), 'East', 1)
corner found (12, 1)
corner found (12, 1)
(((12, 1), (True, True, False, False)), 'South', 1)
corner found (13, 2)
corner found (13, 2)
(((13, 2), (True, True, False, False)), 'East', 1)
corner found (11, 2)
corner found (11, 2)
(((11, 2), (True, True, False, False)), 'West', 1)
corner found (12, 2)
corner found (12, 2)
(((12, 2), (True, True, False, False)), 'North', 1)
corner found (13, 1)
corner found (13, 1)
(((13, 1), (True, True, False, False)), 'East', 1)
corner found (11, 1)
corner found (11, 1)
(((11, 1), (True, True, False, False)), 'West', 1)
corner found (13, 1)
corner found (13, 1)
(((13, 1), (True, True, False, False)), 'South', 1)
corner found (14, 2)
corner found (14, 2)
(((14, 2), (True, True, False, False)), 'East', 1)
corner found (12, 2)
corner found (12, 2)
(((12, 2), (True, True, False, False)), 'West', 1)
corner found (13, 2)
corner found (13, 2)
(((13, 2), (True, True, False, False)), 'North', 1)
corner found (14, 1)
corner found (14, 1)
(((14, 1), (True, True, False, False)), 'East', 1)
corner found (12, 1)
corner found (12, 1)
(((12, 1), (True, True, False, False)), 'West', 1)
corner found (14, 1)
corner found (14, 1)
(((14, 1), (True, True, False, False)), 'South', 1)
corner found (15, 2)
corner found (15, 2)
(((15, 2), (True, True, False, False)), 'East', 1)
corner found (13, 2)
corner found (13, 2)
(((13, 2), (True, True, False, False)), 'West', 1)
corner found (14, 2)
corner found (14, 2)
(((14, 2), (True, True, False, False)), 'North', 1)
corner found (15, 1)
corner found (15, 1)
(((15, 1), (True, True, False, False)), 'East', 1)
corner found (13, 1)
corner found (13, 1)
(((13, 1), (True, True, False, False)), 'West', 1)
corner found (15, 1)
corner found (15, 1)
(((15, 1), (True, True, False, False)), 'South', 1)
corner found (16, 2)
corner found (16, 2)
(((16, 2), (True, True, False, False)), 'East', 1)
corner found (14, 2)
corner found (14, 2)
(((14, 2), (True, True, False, False)), 'West', 1)
corner found (15, 2)
corner found (15, 2)
(((15, 2), (True, True, False, False)), 'North', 1)
corner found (16, 1)
corner found (16, 1)
(((16, 1), (True, True, False, False)), 'East', 1)
corner found (14, 1)
corner found (14, 1)
(((14, 1), (True, True, False, False)), 'West', 1)
corner found (16, 3)
corner found (16, 3)
(((16, 3), (True, True, False, False)), 'North', 1)
corner found (16, 1)
corner found (16, 1)
(((16, 1), (True, True, False, False)), 'South', 1)
corner found (15, 2)
corner found (15, 2)
(((15, 2), (True, True, False, False)), 'West', 1)
corner found (16, 2)
corner found (16, 2)
(((16, 2), (True, True, False, False)), 'North', 1)
corner found (15, 1)
corner found (15, 1)
(((15, 1), (True, True, False, False)), 'West', 1)
corner found (9, 3)
(((9, 3), (True, False, False, False)), 'North', 1)
corner found (8, 2)
(((8, 2), (True, False, False, False)), 'West', 1)
corner found (11, 3)
(((11, 3), (True, False, False, False)), 'South', 1)
corner found (12, 4)
(((12, 4), (True, False, False, False)), 'East', 1)
corner found (10, 4)
(((10, 4), (True, False, False, False)), 'West', 1)
(((15, 9), (False, False, False, False)), 'South', 1)
(((16, 10), (False, False, False, False)), 'East', 1)
(((14, 10), (False, False, False, False)), 'West', 1)
(((20, 8), (False, False, False, False)), 'North', 1)
(((20, 6), (False, False, False, False)), 'South', 1)
corner found (7, 8)
corner found (7, 8)
(((7, 8), (True, True, False, False)), 'North', 1)
corner found (7, 6)
corner found (7, 6)
(((7, 6), (True, True, False, False)), 'South', 1)
corner found (9, 2)
(((9, 2), (True, False, False, False)), 'East', 1)
corner found (7, 2)
(((7, 2), (True, False, False, False)), 'West', 1)
(((15, 10), (False, False, False, False)), 'West', 1)
(((20, 7), (False, False, False, False)), 'South', 1)
(((21, 8), (False, False, False, False)), 'East', 1)
corner found (7, 7)
corner found (7, 7)
(((7, 7), (True, True, False, False)), 'South', 1)
corner found (8, 2)
(((8, 2), (True, False, False, False)), 'East', 1)
corner found (6, 2)
(((6, 2), (True, False, False, False)), 'West', 1)
(((22, 8), (False, False, False, False)), 'East', 1)
(((20, 8), (False, False, False, False)), 'West', 1)
corner found (7, 2)
(((7, 2), (True, False, False, False)), 'East', 1)
corner found (5, 2)
(((5, 2), (True, False, False, False)), 'West', 1)
(((23, 8), (False, False, False, False)), 'East', 1)
(((21, 8), (False, False, False, False)), 'West', 1)
corner found (5, 1)
(((5, 1), (True, False, False, False)), 'South', 1)
corner found (6, 2)
(((6, 2), (True, False, False, False)), 'East', 1)
(((24, 8), (False, False, False, False)), 'East', 1)
(((22, 8), (False, False, False, False)), 'West', 1)
(((24, 9), (False, False, False, False)), 'North', 1)
(((24, 7), (False, False, False, False)), 'South', 1)
(((23, 8), (False, False, False, False)), 'West', 1)
(((24, 10), (False, False, False, False)), 'North', 1)
(((24, 8), (False, False, False, False)), 'South', 1)
(((24, 9), (False, False, False, False)), 'South', 1)
corner found (7, 7)
(((7, 7), (False, True, False, False)), 'South', 1)
corner found (9, 3)
(((9, 3), (False, True, False, False)), 'South', 1)
corner found (10, 4)
(((10, 4), (False, True, False, False)), 'East', 1)
corner found (8, 4)
(((8, 4), (False, True, False, False)), 'West', 1)
corner found (2, 8)
(((2, 8), (False, True, False, False)), 'West', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'North', 1)
corner found (3, 4)
corner found (3, 4)
(((3, 4), (True, True, False, False)), 'South', 1)
(((18, 6), (False, False, False, False)), 'East', 1)
(((16, 6), (False, False, False, False)), 'West', 1)
corner found (5, 6)
corner found (5, 6)
(((5, 6), (True, True, False, False)), 'East', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'West', 1)
corner found (9, 2)
corner found (9, 2)
(((9, 2), (True, True, False, False)), 'East', 1)
corner found (7, 2)
corner found (7, 2)
(((7, 2), (True, True, False, False)), 'West', 1)
corner found (13, 6)
corner found (13, 6)
(((13, 6), (True, True, False, False)), 'North', 1)
corner found (13, 4)
corner found (13, 4)
(((13, 4), (True, True, False, False)), 'South', 1)
corner found (16, 4)
corner found (16, 4)
(((16, 4), (True, True, False, False)), 'North', 1)
corner found (16, 2)
corner found (16, 2)
(((16, 2), (True, True, False, False)), 'South', 1)
corner found (9, 4)
(((9, 4), (False, True, False, False)), 'North', 1)
corner found (9, 2)
(((9, 2), (False, True, False, False)), 'South', 1)
corner found (9, 3)
(((9, 3), (False, True, False, False)), 'North', 1)
corner found (8, 2)
(((8, 2), (False, True, False, False)), 'West', 1)
corner found (9, 2)
(((9, 2), (False, True, False, False)), 'East', 1)
corner found (7, 2)
(((7, 2), (False, True, False, False)), 'West', 1)
corner found (8, 2)
(((8, 2), (False, True, False, False)), 'East', 1)
corner found (6, 2)
(((6, 2), (False, True, False, False)), 'West', 1)
corner found (7, 2)
(((7, 2), (False, True, False, False)), 'East', 1)
corner found (5, 2)
(((5, 2), (False, True, False, False)), 'West', 1)
corner found (5, 1)
(((5, 1), (False, True, False, False)), 'South', 1)
corner found (6, 2)
(((6, 2), (False, True, False, False)), 'East', 1)
corner found (5, 2)
(((5, 2), (False, True, False, False)), 'North', 1)
corner found (11, 4)
(((11, 4), (True, False, False, False)), 'North', 1)
corner found (11, 2)
(((11, 2), (True, False, False, False)), 'South', 1)
corner found (13, 4)
(((13, 4), (True, False, False, False)), 'East', 1)
corner found (11, 4)
(((11, 4), (True, False, False, False)), 'West', 1)
(((15, 10), (False, False, False, False)), 'North', 1)
(((15, 8), (False, False, False, False)), 'South', 1)
corner found (5, 2)
(((5, 2), (True, False, False, False)), 'North', 1)
(((24, 8), (False, False, False, False)), 'North', 1)
(((24, 6), (False, False, False, False)), 'South', 1)
corner found (11, 3)
(((11, 3), (True, False, False, False)), 'North', 1)
corner found (11, 1)
(((11, 1), (True, False, False, False)), 'South', 1)
corner found (12, 2)
(((12, 2), (True, False, False, False)), 'East', 1)
corner found (13, 5)
(((13, 5), (True, False, False, False)), 'North', 1)
corner found (12, 4)
(((12, 4), (True, False, False, False)), 'West', 1)
corner found (11, 2)
(((11, 2), (True, False, False, False)), 'North', 1)
corner found (12, 1)
(((12, 1), (True, False, False, False)), 'East', 1)
corner found (12, 1)
(((12, 1), (True, False, False, False)), 'South', 1)
corner found (13, 2)
(((13, 2), (True, False, False, False)), 'East', 1)
corner found (11, 2)
(((11, 2), (True, False, False, False)), 'West', 1)
corner found (12, 2)
(((12, 2), (True, False, False, False)), 'North', 1)
corner found (13, 1)
(((13, 1), (True, False, False, False)), 'East', 1)
corner found (11, 1)
(((11, 1), (True, False, False, False)), 'West', 1)
corner found (13, 1)
(((13, 1), (True, False, False, False)), 'South', 1)
corner found (14, 2)
(((14, 2), (True, False, False, False)), 'East', 1)
corner found (12, 2)
(((12, 2), (True, False, False, False)), 'West', 1)
corner found (13, 2)
(((13, 2), (True, False, False, False)), 'North', 1)
corner found (14, 1)
(((14, 1), (True, False, False, False)), 'East', 1)
corner found (12, 1)
(((12, 1), (True, False, False, False)), 'West', 1)
corner found (14, 1)
(((14, 1), (True, False, False, False)), 'South', 1)
corner found (15, 2)
(((15, 2), (True, False, False, False)), 'East', 1)
corner found (13, 2)
(((13, 2), (True, False, False, False)), 'West', 1)
corner found (14, 2)
(((14, 2), (True, False, False, False)), 'North', 1)
corner found (15, 1)
(((15, 1), (True, False, False, False)), 'East', 1)
corner found (13, 1)
(((13, 1), (True, False, False, False)), 'West', 1)
corner found (15, 1)
(((15, 1), (True, False, False, False)), 'South', 1)
corner found (16, 2)
(((16, 2), (True, False, False, False)), 'East', 1)
corner found (14, 2)
(((14, 2), (True, False, False, False)), 'West', 1)
corner found (15, 2)
(((15, 2), (True, False, False, False)), 'North', 1)
corner found (16, 1)
(((16, 1), (True, False, False, False)), 'East', 1)
corner found (14, 1)
(((14, 1), (True, False, False, False)), 'West', 1)
corner found (16, 3)
(((16, 3), (True, False, False, False)), 'North', 1)
corner found (16, 1)
(((16, 1), (True, False, False, False)), 'South', 1)
corner found (15, 2)
(((15, 2), (True, False, False, False)), 'West', 1)
corner found (16, 2)
(((16, 2), (True, False, False, False)), 'North', 1)
corner found (15, 1)
(((15, 1), (True, False, False, False)), 'West', 1)
corner found (11, 4)
(((11, 4), (False, True, False, False)), 'East', 1)
corner found (9, 4)
(((9, 4), (False, True, False, False)), 'West', 1)
corner found (3, 5)
corner found (3, 5)
(((3, 5), (True, True, False, False)), 'South', 1)
corner found (4, 6)
corner found (4, 6)
(((4, 6), (True, True, False, False)), 'East', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, False)), 'West', 1)
(((17, 6), (False, False, False, False)), 'East', 1)
corner found (8, 2)
corner found (8, 2)
(((8, 2), (True, True, False, False)), 'East', 1)
corner found (6, 2)
corner found (6, 2)
(((6, 2), (True, True, False, False)), 'West', 1)
corner found (13, 5)
corner found (13, 5)
(((13, 5), (True, True, False, False)), 'South', 1)
corner found (12, 6)
corner found (12, 6)
(((12, 6), (True, True, False, False)), 'West', 1)
corner found (16, 3)
corner found (16, 3)
(((16, 3), (True, True, False, False)), 'South', 1)
corner found (17, 4)
corner found (17, 4)
(((17, 4), (True, True, False, False)), 'East', 1)
(((24, 7), (False, False, False, False)), 'North', 1)
(((24, 5), (False, False, False, False)), 'South', 1)
corner found (18, 4)
corner found (18, 4)
(((18, 4), (True, True, False, False)), 'East', 1)
corner found (16, 4)
corner found (16, 4)
(((16, 4), (True, True, False, False)), 'West', 1)
(((24, 6), (False, False, False, False)), 'North', 1)
(((24, 4), (False, False, False, False)), 'South', 1)
corner found (18, 5)
corner found (18, 5)
(((18, 5), (True, True, False, False)), 'North', 1)
corner found (18, 3)
corner found (18, 3)
(((18, 3), (True, True, False, False)), 'South', 1)
corner found (19, 4)
corner found (19, 4)
(((19, 4), (True, True, False, False)), 'East', 1)
corner found (17, 4)
corner found (17, 4)
(((17, 4), (True, True, False, False)), 'West', 1)
(((24, 5), (False, False, False, False)), 'North', 1)
(((25, 4), (False, False, False, False)), 'East', 1)
(((23, 4), (False, False, False, False)), 'West', 1)
corner found (18, 4)
corner found (18, 4)
(((18, 4), (True, True, False, False)), 'North', 1)
corner found (18, 2)
corner found (18, 2)
(((18, 2), (True, True, False, False)), 'South', 1)
corner found (20, 4)
corner found (20, 4)
(((20, 4), (True, True, False, False)), 'East', 1)
corner found (18, 4)
corner found (18, 4)
(((18, 4), (True, True, False, False)), 'West', 1)
(((26, 4), (False, False, False, False)), 'East', 1)
(((24, 4), (False, False, False, False)), 'West', 1)
corner found (18, 3)
corner found (18, 3)
(((18, 3), (True, True, False, False)), 'North', 1)
corner found (18, 1)
corner found (18, 1)
(((18, 1), (True, True, False, False)), 'South', 1)
corner found (19, 4)
corner found (19, 4)
(((19, 4), (True, True, False, False)), 'West', 1)
(((26, 5), (False, False, False, False)), 'North', 1)
(((26, 3), (False, False, False, False)), 'South', 1)
(((25, 4), (False, False, False, False)), 'West', 1)
corner found (18, 2)
corner found (18, 2)
(((18, 2), (True, True, False, False)), 'North', 1)
(((26, 4), (False, False, False, False)), 'North', 1)
(((15, 9), (False, False, False, False)), 'North', 1)
(((16, 8), (False, False, False, False)), 'East', 1)
corner found (13, 6)
(((13, 6), (True, False, False, False)), 'North', 1)
corner found (13, 4)
(((13, 4), (True, False, False, False)), 'South', 1)
corner found (16, 4)
(((16, 4), (True, False, False, False)), 'North', 1)
corner found (16, 2)
(((16, 2), (True, False, False, False)), 'South', 1)
(((17, 8), (False, False, False, False)), 'East', 1)
(((15, 8), (False, False, False, False)), 'West', 1)
corner found (13, 5)
(((13, 5), (True, False, False, False)), 'South', 1)
corner found (12, 6)
(((12, 6), (True, False, False, False)), 'West', 1)
(((18, 8), (False, False, False, False)), 'East', 1)
(((16, 8), (False, False, False, False)), 'West', 1)
corner found (13, 6)
(((13, 6), (True, False, False, False)), 'East', 1)
corner found (11, 6)
(((11, 6), (True, False, False, False)), 'West', 1)
(((18, 9), (False, False, False, False)), 'North', 1)
(((17, 8), (False, False, False, False)), 'West', 1)
corner found (11, 7)
(((11, 7), (True, False, False, False)), 'North', 1)
corner found (12, 6)
(((12, 6), (True, False, False, False)), 'East', 1)
corner found (10, 6)
(((10, 6), (True, False, False, False)), 'West', 1)
(((18, 10), (False, False, False, False)), 'North', 1)
(((18, 8), (False, False, False, False)), 'South', 1)
corner found (11, 8)
(((11, 8), (True, False, False, False)), 'North', 1)
corner found (11, 6)
(((11, 6), (True, False, False, False)), 'South', 1)
corner found (11, 6)
(((11, 6), (True, False, False, False)), 'East', 1)
corner found (9, 6)
(((9, 6), (True, False, False, False)), 'West', 1)
(((18, 11), (False, False, False, False)), 'North', 1)
(((18, 9), (False, False, False, False)), 'South', 1)
(((19, 10), (False, False, False, False)), 'East', 1)
corner found (11, 9)
(((11, 9), (True, False, False, False)), 'North', 1)
corner found (11, 7)
(((11, 7), (True, False, False, False)), 'South', 1)
corner found (12, 8)
(((12, 8), (True, False, False, False)), 'East', 1)
corner found (9, 7)
(((9, 7), (True, False, False, False)), 'North', 1)
corner found (10, 6)
(((10, 6), (True, False, False, False)), 'East', 1)
(((18, 12), (False, False, False, False)), 'North', 1)
(((18, 10), (False, False, False, False)), 'South', 1)
(((20, 10), (False, False, False, False)), 'East', 1)
(((18, 10), (False, False, False, False)), 'West', 1)
corner found (11, 10)
(((11, 10), (True, False, False, False)), 'North', 1)
corner found (11, 8)
(((11, 8), (True, False, False, False)), 'South', 1)
corner found (9, 8)
(((9, 8), (True, False, False, False)), 'North', 1)
corner found (9, 6)
(((9, 6), (True, False, False, False)), 'South', 1)
(((18, 11), (False, False, False, False)), 'South', 1)
(((19, 12), (False, False, False, False)), 'East', 1)
(((17, 12), (False, False, False, False)), 'West', 1)
(((21, 10), (False, False, False, False)), 'East', 1)
(((19, 10), (False, False, False, False)), 'West', 1)
corner found (11, 11)
(((11, 11), (True, False, False, False)), 'North', 1)
corner found (11, 9)
(((11, 9), (True, False, False, False)), 'South', 1)
corner found (12, 10)
(((12, 10), (True, False, False, False)), 'East', 1)
corner found (10, 10)
(((10, 10), (True, False, False, False)), 'West', 1)
corner found (9, 7)
(((9, 7), (True, False, False, False)), 'South', 1)
(((20, 12), (False, False, False, False)), 'East', 1)
(((18, 12), (False, False, False, False)), 'West', 1)
(((22, 10), (False, False, False, False)), 'East', 1)
(((20, 10), (False, False, False, False)), 'West', 1)
corner found (11, 12)
(((11, 12), (True, False, False, False)), 'North', 1)
corner found (11, 10)
(((11, 10), (True, False, False, False)), 'South', 1)
corner found (11, 10)
(((11, 10), (True, False, False, False)), 'East', 1)
corner found (9, 10)
(((9, 10), (True, False, False, False)), 'West', 1)
(((21, 12), (False, False, False, False)), 'East', 1)
(((19, 12), (False, False, False, False)), 'West', 1)
(((21, 10), (False, False, False, False)), 'West', 1)
corner found (11, 11)
(((11, 11), (True, False, False, False)), 'South', 1)
corner found (9, 11)
(((9, 11), (True, False, False, False)), 'North', 1)
corner found (10, 10)
(((10, 10), (True, False, False, False)), 'East', 1)
(((22, 12), (False, False, False, False)), 'East', 1)
(((20, 12), (False, False, False, False)), 'West', 1)
corner found (9, 12)
(((9, 12), (True, False, False, False)), 'North', 1)
corner found (9, 10)
(((9, 10), (True, False, False, False)), 'South', 1)
(((23, 12), (False, False, False, False)), 'East', 1)
(((21, 12), (False, False, False, False)), 'West', 1)
corner found (9, 11)
(((9, 11), (True, False, False, False)), 'South', 1)
(((24, 12), (False, False, False, False)), 'East', 1)
(((22, 12), (False, False, False, False)), 'West', 1)
(((25, 12), (False, False, False, False)), 'East', 1)
(((23, 12), (False, False, False, False)), 'West', 1)
(((26, 12), (False, False, False, False)), 'East', 1)
(((24, 12), (False, False, False, False)), 'West', 1)
(((26, 11), (False, False, False, False)), 'South', 1)
(((25, 12), (False, False, False, False)), 'West', 1)
corner found (11, 3)
(((11, 3), (False, True, False, False)), 'South', 1)
corner found (12, 4)
(((12, 4), (False, True, False, False)), 'East', 1)
corner found (10, 4)
(((10, 4), (False, True, False, False)), 'West', 1)
corner found (3, 6)
corner found (3, 6)
(((3, 6), (True, True, False, False)), 'East', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'West', 1)
corner found (7, 2)
corner found (7, 2)
(((7, 2), (True, True, False, False)), 'East', 1)
corner found (5, 2)
corner found (5, 2)
(((5, 2), (True, True, False, False)), 'West', 1)
corner found (13, 6)
corner found (13, 6)
(((13, 6), (True, True, False, False)), 'East', 1)
corner found (11, 6)
corner found (11, 6)
(((11, 6), (True, True, False, False)), 'West', 1)
corner found (18, 6)
corner found (18, 6)
(((18, 6), (True, True, False, False)), 'North', 1)
corner found (18, 4)
corner found (18, 4)
(((18, 4), (True, True, False, False)), 'South', 1)
(((24, 4), (False, False, False, False)), 'East', 1)
(((22, 4), (False, False, False, False)), 'West', 1)
(((26, 6), (False, False, False, False)), 'North', 1)
(((26, 4), (False, False, False, False)), 'South', 1)
corner found (11, 4)
(((11, 4), (False, True, False, False)), 'North', 1)
corner found (11, 2)
(((11, 2), (False, True, False, False)), 'South', 1)
corner found (11, 3)
(((11, 3), (False, True, False, False)), 'North', 1)
corner found (11, 1)
(((11, 1), (False, True, False, False)), 'South', 1)
corner found (12, 2)
(((12, 2), (False, True, False, False)), 'East', 1)
corner found (11, 2)
(((11, 2), (False, True, False, False)), 'North', 1)
corner found (12, 1)
(((12, 1), (False, True, False, False)), 'East', 1)
corner found (16, 3)
(((16, 3), (True, False, False, False)), 'South', 1)
corner found (17, 4)
(((17, 4), (True, False, False, False)), 'East', 1)
corner found (13, 8)
(((13, 8), (True, False, False, False)), 'East', 1)
corner found (11, 8)
(((11, 8), (True, False, False, False)), 'West', 1)
(((18, 12), (False, False, False, False)), 'East', 1)
(((16, 12), (False, False, False, False)), 'West', 1)
corner found (13, 10)
(((13, 10), (True, False, False, False)), 'East', 1)
corner found (11, 10)
(((11, 10), (True, False, False, False)), 'West', 1)
(((26, 12), (False, False, False, False)), 'North', 1)
(((26, 10), (False, False, False, False)), 'South', 1)
corner found (18, 4)
(((18, 4), (True, False, False, False)), 'East', 1)
corner found (16, 4)
(((16, 4), (True, False, False, False)), 'West', 1)
corner found (18, 5)
(((18, 5), (True, False, False, False)), 'North', 1)
corner found (18, 3)
(((18, 3), (True, False, False, False)), 'South', 1)
corner found (19, 4)
(((19, 4), (True, False, False, False)), 'East', 1)
corner found (17, 4)
(((17, 4), (True, False, False, False)), 'West', 1)
corner found (18, 4)
(((18, 4), (True, False, False, False)), 'North', 1)
corner found (18, 2)
(((18, 2), (True, False, False, False)), 'South', 1)
corner found (20, 4)
(((20, 4), (True, False, False, False)), 'East', 1)
corner found (18, 4)
(((18, 4), (True, False, False, False)), 'West', 1)
corner found (18, 3)
(((18, 3), (True, False, False, False)), 'North', 1)
corner found (18, 1)
(((18, 1), (True, False, False, False)), 'South', 1)
corner found (19, 4)
(((19, 4), (True, False, False, False)), 'West', 1)
corner found (18, 2)
(((18, 2), (True, False, False, False)), 'North', 1)
corner found (13, 4)
(((13, 4), (False, True, False, False)), 'East', 1)
corner found (11, 4)
(((11, 4), (False, True, False, False)), 'West', 1)
corner found (1, 7)
corner found (1, 7)
(((1, 7), (True, True, False, False)), 'North', 1)
corner found (2, 6)
corner found (2, 6)
(((2, 6), (True, True, False, False)), 'East', 1)
corner found (5, 1)
corner found (5, 1)
(((5, 1), (True, True, False, False)), 'South', 1)
corner found (6, 2)
corner found (6, 2)
(((6, 2), (True, True, False, False)), 'East', 1)
corner found (11, 7)
corner found (11, 7)
(((11, 7), (True, True, False, False)), 'North', 1)
corner found (12, 6)
corner found (12, 6)
(((12, 6), (True, True, False, False)), 'East', 1)
corner found (10, 6)
corner found (10, 6)
(((10, 6), (True, True, False, False)), 'West', 1)
corner found (18, 5)
corner found (18, 5)
(((18, 5), (True, True, False, False)), 'South', 1)
corner found (19, 6)
corner found (19, 6)
(((19, 6), (True, True, False, False)), 'East', 1)
corner found (17, 6)
corner found (17, 6)
(((17, 6), (True, True, False, False)), 'West', 1)
(((22, 5), (False, False, False, False)), 'North', 1)
(((22, 3), (False, False, False, False)), 'South', 1)
(((23, 4), (False, False, False, False)), 'East', 1)
(((26, 5), (False, False, False, False)), 'South', 1)
(((27, 6), (False, False, False, False)), 'East', 1)
corner found (12, 1)
(((12, 1), (False, True, False, False)), 'South', 1)
corner found (13, 2)
(((13, 2), (False, True, False, False)), 'East', 1)
corner found (11, 2)
(((11, 2), (False, True, False, False)), 'West', 1)
corner found (12, 2)
(((12, 2), (False, True, False, False)), 'North', 1)
corner found (13, 1)
(((13, 1), (False, True, False, False)), 'East', 1)
corner found (11, 1)
(((11, 1), (False, True, False, False)), 'West', 1)
corner found (5, 2)
corner found (5, 2)
(((5, 2), (True, True, False, False)), 'North', 1)
corner found (20, 6)
corner found (20, 6)
(((20, 6), (True, True, False, False)), 'East', 1)
corner found (18, 6)
corner found (18, 6)
(((18, 6), (True, True, False, False)), 'West', 1)
(((22, 4), (False, False, False, False)), 'North', 1)
(((22, 2), (False, False, False, False)), 'South', 1)
(((28, 6), (False, False, False, False)), 'East', 1)
(((26, 6), (False, False, False, False)), 'West', 1)
corner found (20, 7)
corner found (20, 7)
(((20, 7), (True, True, False, False)), 'North', 1)
corner found (19, 6)
corner found (19, 6)
(((19, 6), (True, True, False, False)), 'West', 1)
(((22, 3), (False, False, False, False)), 'North', 1)
(((22, 1), (False, False, False, False)), 'South', 1)
(((21, 2), (False, False, False, False)), 'West', 1)
(((28, 7), (False, False, False, False)), 'North', 1)
(((28, 5), (False, False, False, False)), 'South', 1)
(((27, 6), (False, False, False, False)), 'West', 1)
(((22, 2), (False, False, False, False)), 'North', 1)
(((28, 6), (False, False, False, False)), 'North', 1)
(((28, 4), (False, False, False, False)), 'South', 1)
(((28, 5), (False, False, False, False)), 'North', 1)
(((28, 3), (False, False, False, False)), 'South', 1)
(((28, 4), (False, False, False, False)), 'North', 1)
(((28, 2), (False, False, False, False)), 'South', 1)
(((28, 3), (False, False, False, False)), 'North', 1)
corner found (28, 1)
(((28, 1), (False, False, True, False)), 'South', 1)
corner found (28, 2)
(((28, 2), (False, False, True, False)), 'North', 1)
corner found (27, 1)
(((27, 1), (False, False, True, False)), 'West', 1)
corner found (28, 3)
(((28, 3), (False, False, True, False)), 'North', 1)
corner found (28, 1)
(((28, 1), (False, False, True, False)), 'South', 1)
corner found (28, 4)
(((28, 4), (False, False, True, False)), 'North', 1)
corner found (28, 2)
(((28, 2), (False, False, True, False)), 'South', 1)
corner found (28, 5)
(((28, 5), (False, False, True, False)), 'North', 1)
corner found (28, 3)
(((28, 3), (False, False, True, False)), 'South', 1)
corner found (28, 6)
(((28, 6), (False, False, True, False)), 'North', 1)
corner found (28, 4)
(((28, 4), (False, False, True, False)), 'South', 1)
corner found (28, 7)
(((28, 7), (False, False, True, False)), 'North', 1)
corner found (28, 5)
(((28, 5), (False, False, True, False)), 'South', 1)
corner found (27, 6)
(((27, 6), (False, False, True, False)), 'West', 1)
corner found (28, 8)
(((28, 8), (False, False, True, False)), 'North', 1)
corner found (28, 6)
(((28, 6), (False, False, True, False)), 'South', 1)
corner found (28, 7)
(((28, 7), (False, False, True, False)), 'South', 1)
corner found (27, 8)
(((27, 8), (False, False, True, False)), 'West', 1)
corner found (12, 8)
(((12, 8), (True, False, False, False)), 'West', 1)
(((17, 12), (False, False, False, False)), 'East', 1)
(((15, 12), (False, False, False, False)), 'West', 1)
corner found (14, 10)
(((14, 10), (True, False, False, False)), 'East', 1)
corner found (12, 10)
(((12, 10), (True, False, False, False)), 'West', 1)
(((26, 11), (False, False, False, False)), 'North', 1)
(((26, 9), (False, False, False, False)), 'South', 1)
(((27, 10), (False, False, False, False)), 'East', 1)
corner found (18, 6)
(((18, 6), (True, False, False, False)), 'North', 1)
corner found (18, 4)
(((18, 4), (True, False, False, False)), 'South', 1)
corner found (1, 8)
corner found (1, 8)
(((1, 8), (True, True, False, False)), 'North', 1)
corner found (1, 6)
corner found (1, 6)
(((1, 6), (True, True, False, False)), 'South', 1)
corner found (11, 8)
corner found (11, 8)
(((11, 8), (True, True, False, False)), 'North', 1)
corner found (11, 6)
corner found (11, 6)
(((11, 6), (True, True, False, False)), 'South', 1)
corner found (20, 8)
corner found (20, 8)
(((20, 8), (True, True, False, False)), 'North', 1)
corner found (20, 6)
corner found (20, 6)
(((20, 6), (True, True, False, False)), 'South', 1)
(((28, 8), (False, False, False, False)), 'North', 1)
(((28, 6), (False, False, False, False)), 'South', 1)
(((28, 10), (False, False, False, False)), 'East', 1)
(((26, 10), (False, False, False, False)), 'West', 1)
corner found (1, 7)
corner found (1, 7)
(((1, 7), (True, True, False, False)), 'South', 1)
corner found (2, 8)
corner found (2, 8)
(((2, 8), (True, True, False, False)), 'East', 1)
corner found (11, 9)
corner found (11, 9)
(((11, 9), (True, True, False, False)), 'North', 1)
corner found (11, 7)
corner found (11, 7)
(((11, 7), (True, True, False, False)), 'South', 1)
corner found (12, 8)
corner found (12, 8)
(((12, 8), (True, True, False, False)), 'East', 1)
corner found (20, 7)
corner found (20, 7)
(((20, 7), (True, True, False, False)), 'South', 1)
corner found (21, 8)
corner found (21, 8)
(((21, 8), (True, True, False, False)), 'East', 1)
(((28, 7), (False, False, False, False)), 'South', 1)
(((27, 8), (False, False, False, False)), 'West', 1)
(((28, 11), (False, False, False, False)), 'North', 1)
(((27, 10), (False, False, False, False)), 'West', 1)
corner found (3, 8)
corner found (3, 8)
(((3, 8), (True, True, False, False)), 'East', 1)
corner found (1, 8)
corner found (1, 8)
(((1, 8), (True, True, False, False)), 'West', 1)
corner found (11, 10)
corner found (11, 10)
(((11, 10), (True, True, False, False)), 'North', 1)
corner found (11, 8)
corner found (11, 8)
(((11, 8), (True, True, False, False)), 'South', 1)
corner found (13, 8)
corner found (13, 8)
(((13, 8), (True, True, False, False)), 'East', 1)
corner found (11, 8)
corner found (11, 8)
(((11, 8), (True, True, False, False)), 'West', 1)
corner found (22, 8)
corner found (22, 8)
(((22, 8), (True, True, False, False)), 'East', 1)
corner found (20, 8)
corner found (20, 8)
(((20, 8), (True, True, False, False)), 'West', 1)
corner found (28, 12)
(((28, 12), (False, False, False, True)), 'North', 1)
(((28, 10), (False, False, False, False)), 'South', 1)
corner found (2, 8)
corner found (2, 8)
(((2, 8), (True, True, False, False)), 'West', 1)
corner found (11, 11)
corner found (11, 11)
(((11, 11), (True, True, False, False)), 'North', 1)
corner found (11, 9)
corner found (11, 9)
(((11, 9), (True, True, False, False)), 'South', 1)
corner found (12, 10)
corner found (12, 10)
(((12, 10), (True, True, False, False)), 'East', 1)
corner found (10, 10)
corner found (10, 10)
(((10, 10), (True, True, False, False)), 'West', 1)
corner found (12, 8)
corner found (12, 8)
(((12, 8), (True, True, False, False)), 'West', 1)
corner found (23, 8)
corner found (23, 8)
(((23, 8), (True, True, False, False)), 'East', 1)
corner found (21, 8)
corner found (21, 8)
(((21, 8), (True, True, False, False)), 'West', 1)
corner found (28, 11)
(((28, 11), (False, False, False, True)), 'South', 1)
corner found (11, 12)
corner found (11, 12)
(((11, 12), (True, True, False, False)), 'North', 1)
corner found (11, 10)
corner found (11, 10)
(((11, 10), (True, True, False, False)), 'South', 1)
corner found (13, 10)
corner found (13, 10)
(((13, 10), (True, True, False, False)), 'East', 1)
corner found (11, 10)
corner found (11, 10)
(((11, 10), (True, True, False, False)), 'West', 1)
corner found (24, 8)
corner found (24, 8)
(((24, 8), (True, True, False, False)), 'East', 1)
corner found (22, 8)
corner found (22, 8)
(((22, 8), (True, True, False, False)), 'West', 1)
corner found (28, 12)
(((28, 12), (False, False, False, True)), 'North', 1)
corner found (28, 10)
(((28, 10), (False, False, False, True)), 'South', 1)
corner found (11, 11)
corner found (11, 11)
(((11, 11), (True, True, False, False)), 'South', 1)
corner found (14, 10)
corner found (14, 10)
(((14, 10), (True, True, False, False)), 'East', 1)
corner found (12, 10)
corner found (12, 10)
(((12, 10), (True, True, False, False)), 'West', 1)
corner found (24, 9)
corner found (24, 9)
(((24, 9), (True, True, False, False)), 'North', 1)
corner found (24, 7)
corner found (24, 7)
(((24, 7), (True, True, False, False)), 'South', 1)
corner found (23, 8)
corner found (23, 8)
(((23, 8), (True, True, False, False)), 'West', 1)
corner found (28, 11)
(((28, 11), (False, False, False, True)), 'North', 1)
corner found (27, 10)
(((27, 10), (False, False, False, True)), 'West', 1)
corner found (15, 10)
corner found (15, 10)
(((15, 10), (True, True, False, False)), 'East', 1)
corner found (13, 10)
corner found (13, 10)
(((13, 10), (True, True, False, False)), 'West', 1)
corner found (24, 10)
corner found (24, 10)
(((24, 10), (True, True, False, False)), 'North', 1)
corner found (24, 8)
corner found (24, 8)
(((24, 8), (True, True, False, False)), 'South', 1)
corner found (15, 9)
corner found (15, 9)
(((15, 9), (True, True, False, False)), 'South', 1)
corner found (16, 10)
corner found (16, 10)
(((16, 10), (True, True, False, False)), 'East', 1)
corner found (14, 10)
corner found (14, 10)
(((14, 10), (True, True, False, False)), 'West', 1)
corner found (24, 9)
corner found (24, 9)
(((24, 9), (True, True, False, False)), 'South', 1)
corner found (15, 10)
corner found (15, 10)
(((15, 10), (True, True, False, False)), 'West', 1)
corner found (13, 5)
(((13, 5), (False, True, False, False)), 'North', 1)
corner found (12, 4)
(((12, 4), (False, True, False, False)), 'West', 1)
corner found (11, 6)
corner found (11, 6)
(((11, 6), (True, True, False, False)), 'East', 1)
corner found (9, 6)
corner found (9, 6)
(((9, 6), (True, True, False, False)), 'West', 1)
corner found (18, 6)
corner found (18, 6)
(((18, 6), (True, True, False, False)), 'East', 1)
corner found (16, 6)
corner found (16, 6)
(((16, 6), (True, True, False, False)), 'West', 1)
(((22, 6), (False, False, False, False)), 'North', 1)
(((22, 4), (False, False, False, False)), 'South', 1)
corner found (13, 1)
(((13, 1), (False, True, False, False)), 'South', 1)
corner found (14, 2)
(((14, 2), (False, True, False, False)), 'East', 1)
corner found (12, 2)
(((12, 2), (False, True, False, False)), 'West', 1)
corner found (13, 2)
(((13, 2), (False, True, False, False)), 'North', 1)
corner found (14, 1)
(((14, 1), (False, True, False, False)), 'East', 1)
corner found (12, 1)
(((12, 1), (False, True, False, False)), 'West', 1)
(((22, 2), (False, False, False, False)), 'East', 1)
(((20, 2), (False, False, False, False)), 'West', 1)
corner found (28, 1)
(((28, 1), (False, False, True, False)), 'East', 1)
corner found (26, 1)
(((26, 1), (False, False, True, False)), 'West', 1)
corner found (28, 6)
(((28, 6), (False, False, True, False)), 'East', 1)
corner found (26, 6)
(((26, 6), (False, False, True, False)), 'West', 1)
corner found (28, 8)
(((28, 8), (False, False, True, False)), 'East', 1)
corner found (26, 8)
(((26, 8), (False, False, True, False)), 'West', 1)
(((16, 12), (False, False, False, False)), 'East', 1)
(((14, 12), (False, False, False, False)), 'West', 1)
corner found (15, 10)
(((15, 10), (True, False, False, False)), 'East', 1)
corner found (13, 10)
(((13, 10), (True, False, False, False)), 'West', 1)
(((26, 10), (False, False, False, False)), 'North', 1)
(((26, 8), (False, False, False, False)), 'South', 1)
corner found (18, 5)
(((18, 5), (True, False, False, False)), 'South', 1)
corner found (19, 6)
(((19, 6), (True, False, False, False)), 'East', 1)
corner found (17, 6)
(((17, 6), (True, False, False, False)), 'West', 1)
(((28, 8), (False, False, False, False)), 'East', 1)
(((26, 8), (False, False, False, False)), 'West', 1)
corner found (11, 10)
corner found (11, 10)
(((11, 10), (True, True, False, False)), 'East', 1)
corner found (9, 10)
corner found (9, 10)
(((9, 10), (True, True, False, False)), 'West', 1)
corner found (24, 8)
corner found (24, 8)
(((24, 8), (True, True, False, False)), 'North', 1)
corner found (24, 6)
corner found (24, 6)
(((24, 6), (True, True, False, False)), 'South', 1)
corner found (28, 10)
(((28, 10), (False, False, False, True)), 'East', 1)
corner found (26, 10)
(((26, 10), (False, False, False, True)), 'West', 1)
corner found (15, 10)
corner found (15, 10)
(((15, 10), (True, True, False, False)), 'North', 1)
corner found (15, 8)
corner found (15, 8)
(((15, 8), (True, True, False, False)), 'South', 1)
corner found (20, 6)
(((20, 6), (True, False, False, False)), 'East', 1)
corner found (18, 6)
(((18, 6), (True, False, False, False)), 'West', 1)
corner found (20, 7)
(((20, 7), (True, False, False, False)), 'North', 1)
corner found (19, 6)
(((19, 6), (True, False, False, False)), 'West', 1)
corner found (13, 6)
(((13, 6), (False, True, False, False)), 'North', 1)
corner found (13, 4)
(((13, 4), (False, True, False, False)), 'South', 1)
corner found (9, 7)
corner found (9, 7)
(((9, 7), (True, True, False, False)), 'North', 1)
corner found (10, 6)
corner found (10, 6)
(((10, 6), (True, True, False, False)), 'East', 1)
corner found (17, 6)
corner found (17, 6)
(((17, 6), (True, True, False, False)), 'East', 1)
(((22, 5), (False, False, False, False)), 'South', 1)
corner found (14, 1)
(((14, 1), (False, True, False, False)), 'South', 1)
corner found (15, 2)
(((15, 2), (False, True, False, False)), 'East', 1)
corner found (13, 2)
(((13, 2), (False, True, False, False)), 'West', 1)
corner found (14, 2)
(((14, 2), (False, True, False, False)), 'North', 1)
corner found (15, 1)
(((15, 1), (False, True, False, False)), 'East', 1)
corner found (13, 1)
(((13, 1), (False, True, False, False)), 'West', 1)
(((21, 2), (False, False, False, False)), 'East', 1)
corner found (27, 1)
(((27, 1), (False, False, True, False)), 'East', 1)
corner found (25, 1)
(((25, 1), (False, False, True, False)), 'West', 1)
corner found (26, 5)
(((26, 5), (False, False, True, False)), 'South', 1)
corner found (27, 6)
(((27, 6), (False, False, True, False)), 'East', 1)
corner found (26, 9)
(((26, 9), (False, False, True, False)), 'North', 1)
corner found (27, 8)
(((27, 8), (False, False, True, False)), 'East', 1)
(((15, 12), (False, False, False, False)), 'East', 1)
(((13, 12), (False, False, False, False)), 'West', 1)
corner found (24, 7)
corner found (24, 7)
(((24, 7), (True, True, False, False)), 'North', 1)
corner found (24, 5)
corner found (24, 5)
(((24, 5), (True, True, False, False)), 'South', 1)
corner found (26, 10)
(((26, 10), (False, False, True, False)), 'North', 1)
corner found (26, 8)
(((26, 8), (False, False, True, False)), 'South', 1)
(((14, 12), (False, False, False, False)), 'East', 1)
corner found (24, 6)
corner found (24, 6)
(((24, 6), (True, True, False, False)), 'North', 1)
corner found (24, 4)
corner found (24, 4)
(((24, 4), (True, True, False, False)), 'South', 1)
corner found (26, 11)
(((26, 11), (False, False, True, False)), 'North', 1)
corner found (26, 9)
(((26, 9), (False, False, True, False)), 'South', 1)
corner found (27, 10)
(((27, 10), (False, False, True, False)), 'East', 1)
corner found (24, 5)
corner found (24, 5)
(((24, 5), (True, True, False, False)), 'North', 1)
corner found (25, 4)
corner found (25, 4)
(((25, 4), (True, True, False, False)), 'East', 1)
corner found (23, 4)
corner found (23, 4)
(((23, 4), (True, True, False, False)), 'West', 1)
corner found (26, 12)
(((26, 12), (False, False, True, False)), 'North', 1)
corner found (26, 10)
(((26, 10), (False, False, True, False)), 'South', 1)
corner found (28, 10)
(((28, 10), (False, False, True, False)), 'East', 1)
corner found (26, 10)
(((26, 10), (False, False, True, False)), 'West', 1)
corner found (26, 4)
corner found (26, 4)
(((26, 4), (True, True, False, False)), 'East', 1)
corner found (24, 4)
corner found (24, 4)
(((24, 4), (True, True, False, False)), 'West', 1)
corner found (26, 11)
(((26, 11), (False, False, True, False)), 'South', 1)
corner found (25, 12)
(((25, 12), (False, False, True, False)), 'West', 1)
corner found (28, 11)
(((28, 11), (False, False, True, False)), 'North', 1)
corner found (27, 10)
(((27, 10), (False, False, True, False)), 'West', 1)
corner found (26, 5)
corner found (26, 5)
(((26, 5), (True, True, False, False)), 'North', 1)
corner found (26, 3)
corner found (26, 3)
(((26, 3), (True, True, False, False)), 'South', 1)
corner found (25, 4)
corner found (25, 4)
(((25, 4), (True, True, False, False)), 'West', 1)
corner found (28, 12)
corner found (28, 12)
(((28, 12), (False, False, True, True)), 'North', 1)
corner found (28, 10)
(((28, 10), (False, False, True, False)), 'South', 1)
corner found (26, 4)
corner found (26, 4)
(((26, 4), (True, True, False, False)), 'North', 1)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (False, False, True, True)), 'South', 1)
corner found (15, 9)
(((15, 9), (True, False, False, False)), 'South', 1)
corner found (16, 10)
(((16, 10), (True, False, False, False)), 'East', 1)
corner found (14, 10)
(((14, 10), (True, False, False, False)), 'West', 1)
(((26, 9), (False, False, False, False)), 'North', 1)
(((27, 8), (False, False, False, False)), 'East', 1)
corner found (18, 6)
(((18, 6), (True, False, False, False)), 'East', 1)
corner found (16, 6)
(((16, 6), (True, False, False, False)), 'West', 1)
corner found (9, 11)
corner found (9, 11)
(((9, 11), (True, True, False, False)), 'North', 1)
corner found (10, 10)
corner found (10, 10)
(((10, 10), (True, True, False, False)), 'East', 1)
corner found (26, 11)
(((26, 11), (False, False, False, True)), 'North', 1)
corner found (26, 9)
(((26, 9), (False, False, False, True)), 'South', 1)
corner found (27, 10)
(((27, 10), (False, False, False, True)), 'East', 1)
corner found (15, 9)
corner found (15, 9)
(((15, 9), (True, True, False, False)), 'North', 1)
corner found (16, 8)
corner found (16, 8)
(((16, 8), (True, True, False, False)), 'East', 1)
corner found (20, 8)
(((20, 8), (True, False, False, False)), 'North', 1)
corner found (20, 6)
(((20, 6), (True, False, False, False)), 'South', 1)
corner found (9, 8)
corner found (9, 8)
(((9, 8), (True, True, False, False)), 'North', 1)
corner found (9, 6)
corner found (9, 6)
(((9, 6), (True, True, False, False)), 'South', 1)
corner found (9, 12)
corner found (9, 12)
(((9, 12), (True, True, False, False)), 'North', 1)
corner found (9, 10)
corner found (9, 10)
(((9, 10), (True, True, False, False)), 'South', 1)
corner found (26, 10)
(((26, 10), (False, False, False, True)), 'North', 1)
corner found (26, 8)
(((26, 8), (False, False, False, True)), 'South', 1)
corner found (17, 8)
corner found (17, 8)
(((17, 8), (True, True, False, False)), 'East', 1)
corner found (15, 8)
corner found (15, 8)
(((15, 8), (True, True, False, False)), 'West', 1)
corner found (9, 7)
corner found (9, 7)
(((9, 7), (True, True, False, False)), 'South', 1)
corner found (9, 11)
corner found (9, 11)
(((9, 11), (True, True, False, False)), 'South', 1)
corner found (26, 9)
(((26, 9), (False, False, False, True)), 'North', 1)
corner found (27, 8)
(((27, 8), (False, False, False, True)), 'East', 1)
corner found (18, 8)
corner found (18, 8)
(((18, 8), (True, True, False, False)), 'East', 1)
corner found (16, 8)
corner found (16, 8)
(((16, 8), (True, True, False, False)), 'West', 1)
corner found (28, 8)
(((28, 8), (False, False, False, True)), 'East', 1)
corner found (26, 8)
(((26, 8), (False, False, False, True)), 'West', 1)
corner found (18, 9)
corner found (18, 9)
(((18, 9), (True, True, False, False)), 'North', 1)
corner found (17, 8)
corner found (17, 8)
(((17, 8), (True, True, False, False)), 'West', 1)
corner found (28, 7)
(((28, 7), (False, False, False, True)), 'South', 1)
corner found (27, 8)
(((27, 8), (False, False, False, True)), 'West', 1)
corner found (18, 10)
corner found (18, 10)
(((18, 10), (True, True, False, False)), 'North', 1)
corner found (18, 8)
corner found (18, 8)
(((18, 8), (True, True, False, False)), 'South', 1)
corner found (28, 8)
(((28, 8), (False, False, False, True)), 'North', 1)
corner found (28, 6)
(((28, 6), (False, False, False, True)), 'South', 1)
corner found (18, 11)
corner found (18, 11)
(((18, 11), (True, True, False, False)), 'North', 1)
corner found (18, 9)
corner found (18, 9)
(((18, 9), (True, True, False, False)), 'South', 1)
corner found (19, 10)
corner found (19, 10)
(((19, 10), (True, True, False, False)), 'East', 1)
corner found (28, 7)
(((28, 7), (False, False, False, True)), 'North', 1)
corner found (28, 5)
(((28, 5), (False, False, False, True)), 'South', 1)
corner found (27, 6)
(((27, 6), (False, False, False, True)), 'West', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (True, True, False, False)), 'North', 1)
corner found (18, 10)
corner found (18, 10)
(((18, 10), (True, True, False, False)), 'South', 1)
corner found (20, 10)
corner found (20, 10)
(((20, 10), (True, True, False, False)), 'East', 1)
corner found (18, 10)
corner found (18, 10)
(((18, 10), (True, True, False, False)), 'West', 1)
corner found (28, 6)
(((28, 6), (False, False, False, True)), 'North', 1)
corner found (28, 4)
(((28, 4), (False, False, False, True)), 'South', 1)
corner found (18, 11)
corner found (18, 11)
(((18, 11), (True, True, False, False)), 'South', 1)
corner found (19, 12)
corner found (19, 12)
(((19, 12), (True, True, False, False)), 'East', 1)
corner found (17, 12)
corner found (17, 12)
(((17, 12), (True, True, False, False)), 'West', 1)
corner found (21, 10)
corner found (21, 10)
(((21, 10), (True, True, False, False)), 'East', 1)
corner found (19, 10)
corner found (19, 10)
(((19, 10), (True, True, False, False)), 'West', 1)
corner found (28, 5)
(((28, 5), (False, False, False, True)), 'North', 1)
corner found (28, 3)
(((28, 3), (False, False, False, True)), 'South', 1)
corner found (20, 12)
corner found (20, 12)
(((20, 12), (True, True, False, False)), 'East', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (True, True, False, False)), 'West', 1)
corner found (22, 10)
corner found (22, 10)
(((22, 10), (True, True, False, False)), 'East', 1)
corner found (20, 10)
corner found (20, 10)
(((20, 10), (True, True, False, False)), 'West', 1)
corner found (28, 4)
(((28, 4), (False, False, False, True)), 'North', 1)
corner found (28, 2)
(((28, 2), (False, False, False, True)), 'South', 1)
corner found (21, 12)
corner found (21, 12)
(((21, 12), (True, True, False, False)), 'East', 1)
corner found (19, 12)
corner found (19, 12)
(((19, 12), (True, True, False, False)), 'West', 1)
corner found (21, 10)
corner found (21, 10)
(((21, 10), (True, True, False, False)), 'West', 1)
corner found (28, 3)
(((28, 3), (False, False, False, True)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (False, False, True, True)), 'South', 1)
corner found (22, 12)
corner found (22, 12)
(((22, 12), (True, True, False, False)), 'East', 1)
corner found (20, 12)
corner found (20, 12)
(((20, 12), (True, True, False, False)), 'West', 1)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (False, False, True, True)), 'North', 1)
corner found (27, 1)
corner found (27, 1)
(((27, 1), (False, False, True, True)), 'West', 1)
corner found (23, 12)
corner found (23, 12)
(((23, 12), (True, True, False, False)), 'East', 1)
corner found (21, 12)
corner found (21, 12)
(((21, 12), (True, True, False, False)), 'West', 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (False, False, True, True)), 'East', 1)
corner found (26, 1)
corner found (26, 1)
(((26, 1), (False, False, True, True)), 'West', 1)
corner found (24, 12)
corner found (24, 12)
(((24, 12), (True, True, False, False)), 'East', 1)
corner found (22, 12)
corner found (22, 12)
(((22, 12), (True, True, False, False)), 'West', 1)
corner found (27, 1)
corner found (27, 1)
(((27, 1), (False, False, True, True)), 'East', 1)
corner found (25, 1)
corner found (25, 1)
(((25, 1), (False, False, True, True)), 'West', 1)
corner found (25, 12)
corner found (25, 12)
(((25, 12), (True, True, False, False)), 'East', 1)
corner found (23, 12)
corner found (23, 12)
(((23, 12), (True, True, False, False)), 'West', 1)
corner found (26, 1)
corner found (26, 1)
(((26, 1), (False, False, True, True)), 'East', 1)
corner found (24, 1)
corner found (24, 1)
(((24, 1), (False, False, True, True)), 'West', 1)
corner found (26, 12)
corner found (26, 12)
(((26, 12), (True, True, False, False)), 'East', 1)
corner found (24, 12)
corner found (24, 12)
(((24, 12), (True, True, False, False)), 'West', 1)
corner found (24, 2)
corner found (24, 2)
(((24, 2), (False, False, True, True)), 'North', 1)
corner found (25, 1)
corner found (25, 1)
(((25, 1), (False, False, True, True)), 'East', 1)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (True, True, False, False)), 'South', 1)
corner found (25, 12)
corner found (25, 12)
(((25, 12), (True, True, False, False)), 'West', 1)
corner found (13, 5)
(((13, 5), (False, True, False, False)), 'South', 1)
corner found (12, 6)
(((12, 6), (False, True, False, False)), 'West', 1)
corner found (15, 1)
(((15, 1), (False, True, False, False)), 'South', 1)
corner found (16, 2)
(((16, 2), (False, True, False, False)), 'East', 1)
corner found (14, 2)
(((14, 2), (False, True, False, False)), 'West', 1)
corner found (15, 2)
(((15, 2), (False, True, False, False)), 'North', 1)
corner found (16, 1)
(((16, 1), (False, True, False, False)), 'East', 1)
corner found (14, 1)
(((14, 1), (False, True, False, False)), 'West', 1)
corner found (26, 1)
(((26, 1), (False, False, True, False)), 'East', 1)
corner found (24, 1)
(((24, 1), (False, False, True, False)), 'West', 1)
corner found (26, 6)
(((26, 6), (False, False, True, False)), 'North', 1)
corner found (26, 4)
(((26, 4), (False, False, True, False)), 'South', 1)
corner found (24, 4)
corner found (24, 4)
(((24, 4), (True, True, False, False)), 'East', 1)
corner found (22, 4)
corner found (22, 4)
(((22, 4), (True, True, False, False)), 'West', 1)
corner found (26, 12)
(((26, 12), (False, False, True, False)), 'East', 1)
corner found (24, 12)
(((24, 12), (False, False, True, False)), 'West', 1)
corner found (26, 6)
corner found (26, 6)
(((26, 6), (True, True, False, False)), 'North', 1)
corner found (26, 4)
corner found (26, 4)
(((26, 4), (True, True, False, False)), 'South', 1)
corner found (28, 12)
corner found (28, 12)
(((28, 12), (False, False, True, True)), 'North', 1)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (False, False, True, True)), 'South', 1)
corner found (13, 6)
(((13, 6), (False, True, False, False)), 'East', 1)
corner found (11, 6)
(((11, 6), (False, True, False, False)), 'West', 1)
corner found (11, 7)
(((11, 7), (False, True, False, False)), 'North', 1)
corner found (12, 6)
(((12, 6), (False, True, False, False)), 'East', 1)
corner found (10, 6)
(((10, 6), (False, True, False, False)), 'West', 1)
corner found (11, 6)
(((11, 6), (False, True, False, False)), 'East', 1)
corner found (9, 6)
(((9, 6), (False, True, False, False)), 'West', 1)
corner found (9, 7)
(((9, 7), (False, True, False, False)), 'North', 1)
corner found (10, 6)
(((10, 6), (False, True, False, False)), 'East', 1)
corner found (15, 10)
(((15, 10), (True, False, False, False)), 'North', 1)
corner found (15, 8)
(((15, 8), (True, False, False, False)), 'South', 1)
corner found (15, 10)
(((15, 10), (True, False, False, False)), 'West', 1)
corner found (17, 6)
(((17, 6), (True, False, False, False)), 'East', 1)
corner found (26, 12)
(((26, 12), (False, False, False, True)), 'North', 1)
corner found (26, 10)
(((26, 10), (False, False, False, True)), 'South', 1)
corner found (20, 7)
(((20, 7), (True, False, False, False)), 'South', 1)
corner found (21, 8)
(((21, 8), (True, False, False, False)), 'East', 1)
corner found (28, 6)
(((28, 6), (False, False, False, True)), 'East', 1)
corner found (26, 6)
(((26, 6), (False, False, False, True)), 'West', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (True, True, False, False)), 'East', 1)
corner found (16, 12)
corner found (16, 12)
(((16, 12), (True, True, False, False)), 'West', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (False, False, True, True)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (False, False, True, True)), 'South', 1)
corner found (24, 1)
corner found (24, 1)
(((24, 1), (False, False, True, True)), 'South', 1)
corner found (26, 12)
corner found (26, 12)
(((26, 12), (True, True, False, False)), 'North', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, False, False)), 'South', 1)
corner found (22, 8)
(((22, 8), (True, False, False, False)), 'East', 1)
corner found (20, 8)
(((20, 8), (True, False, False, False)), 'West', 1)
corner found (23, 8)
(((23, 8), (True, False, False, False)), 'East', 1)
corner found (21, 8)
(((21, 8), (True, False, False, False)), 'West', 1)
corner found (24, 8)
(((24, 8), (True, False, False, False)), 'East', 1)
corner found (22, 8)
(((22, 8), (True, False, False, False)), 'West', 1)
corner found (24, 9)
(((24, 9), (True, False, False, False)), 'North', 1)
corner found (24, 7)
(((24, 7), (True, False, False, False)), 'South', 1)
corner found (23, 8)
(((23, 8), (True, False, False, False)), 'West', 1)
corner found (24, 8)
(((24, 8), (True, False, False, False)), 'North', 1)
corner found (24, 6)
(((24, 6), (True, False, False, False)), 'South', 1)
corner found (24, 7)
(((24, 7), (True, False, False, False)), 'North', 1)
corner found (24, 5)
(((24, 5), (True, False, False, False)), 'South', 1)
corner found (24, 6)
(((24, 6), (True, False, False, False)), 'North', 1)
corner found (24, 4)
(((24, 4), (True, False, False, False)), 'South', 1)
corner found (24, 5)
(((24, 5), (True, False, False, False)), 'North', 1)
corner found (25, 4)
(((25, 4), (True, False, False, False)), 'East', 1)
corner found (23, 4)
(((23, 4), (True, False, False, False)), 'West', 1)
corner found (26, 4)
(((26, 4), (True, False, False, False)), 'East', 1)
corner found (24, 4)
(((24, 4), (True, False, False, False)), 'West', 1)
corner found (26, 5)
(((26, 5), (True, False, False, False)), 'North', 1)
corner found (26, 3)
(((26, 3), (True, False, False, False)), 'South', 1)
corner found (25, 4)
(((25, 4), (True, False, False, False)), 'West', 1)
corner found (26, 4)
(((26, 4), (True, False, False, False)), 'North', 1)
corner found (16, 3)
(((16, 3), (False, True, False, False)), 'North', 1)
corner found (16, 1)
(((16, 1), (False, True, False, False)), 'South', 1)
corner found (15, 2)
(((15, 2), (False, True, False, False)), 'West', 1)
corner found (16, 2)
(((16, 2), (False, True, False, False)), 'North', 1)
corner found (15, 1)
(((15, 1), (False, True, False, False)), 'West', 1)
corner found (24, 2)
(((24, 2), (False, False, True, False)), 'North', 1)
corner found (25, 1)
(((25, 1), (False, False, True, False)), 'East', 1)
corner found (26, 5)
(((26, 5), (False, False, True, False)), 'North', 1)
corner found (26, 3)
(((26, 3), (False, False, True, False)), 'South', 1)
corner found (25, 4)
(((25, 4), (False, False, True, False)), 'West', 1)
corner found (22, 5)
corner found (22, 5)
(((22, 5), (True, True, False, False)), 'North', 1)
corner found (22, 3)
corner found (22, 3)
(((22, 3), (True, True, False, False)), 'South', 1)
corner found (23, 4)
corner found (23, 4)
(((23, 4), (True, True, False, False)), 'East', 1)
corner found (25, 12)
(((25, 12), (False, False, True, False)), 'East', 1)
corner found (23, 12)
(((23, 12), (False, False, True, False)), 'West', 1)
corner found (26, 5)
corner found (26, 5)
(((26, 5), (True, True, False, False)), 'South', 1)
corner found (27, 6)
corner found (27, 6)
(((27, 6), (True, True, False, False)), 'East', 1)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (False, False, True, True)), 'North', 1)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (False, False, True, True)), 'West', 1)
corner found (11, 8)
(((11, 8), (False, True, False, False)), 'North', 1)
corner found (11, 6)
(((11, 6), (False, True, False, False)), 'South', 1)
corner found (9, 8)
(((9, 8), (False, True, False, False)), 'North', 1)
corner found (9, 6)
(((9, 6), (False, True, False, False)), 'South', 1)
corner found (24, 1)
(((24, 1), (False, False, True, False)), 'South', 1)
corner found (22, 4)
corner found (22, 4)
(((22, 4), (True, True, False, False)), 'North', 1)
corner found (22, 2)
corner found (22, 2)
(((22, 2), (True, True, False, False)), 'South', 1)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, False, False)), 'East', 1)
corner found (26, 6)
corner found (26, 6)
(((26, 6), (True, True, False, False)), 'West', 1)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (False, False, True, True)), 'East', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (False, False, True, True)), 'West', 1)
corner found (22, 3)
corner found (22, 3)
(((22, 3), (True, True, False, False)), 'North', 1)
corner found (22, 1)
corner found (22, 1)
(((22, 1), (True, True, False, False)), 'South', 1)
corner found (21, 2)
corner found (21, 2)
(((21, 2), (True, True, False, False)), 'West', 1)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, True, False, False)), 'North', 1)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, True, False, False)), 'South', 1)
corner found (27, 6)
corner found (27, 6)
(((27, 6), (True, True, False, False)), 'West', 1)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (False, False, True, True)), 'North', 1)
corner found (26, 9)
corner found (26, 9)
(((26, 9), (False, False, True, True)), 'South', 1)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (False, False, True, True)), 'East', 1)
corner found (22, 2)
corner found (22, 2)
(((22, 2), (True, True, False, False)), 'North', 1)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, False, False)), 'North', 1)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, True, False, False)), 'South', 1)
corner found (26, 12)
corner found (26, 12)
(((26, 12), (False, False, True, True)), 'North', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (False, False, True, True)), 'South', 1)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, True, False, False)), 'North', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, True, False, False)), 'South', 1)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (False, False, True, True)), 'South', 1)
corner found (25, 12)
corner found (25, 12)
(((25, 12), (False, False, True, True)), 'West', 1)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, True, False, False)), 'North', 1)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (True, True, False, False)), 'South', 1)
corner found (26, 12)
corner found (26, 12)
(((26, 12), (False, False, True, True)), 'East', 1)
corner found (24, 12)
corner found (24, 12)
(((24, 12), (False, False, True, True)), 'West', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, True, False, False)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (True, True, True, False)), 'South', 1)
corner found (25, 12)
corner found (25, 12)
(((25, 12), (False, False, True, True)), 'East', 1)
corner found (23, 12)
corner found (23, 12)
(((23, 12), (False, False, True, True)), 'West', 1)
corner found (28, 2)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (True, True, True, False)), 'North', 1)
corner found (27, 1)
corner found (27, 1)
corner found (27, 1)
(((27, 1), (True, True, True, False)), 'West', 1)
corner found (24, 12)
corner found (24, 12)
(((24, 12), (False, False, True, True)), 'East', 1)
corner found (22, 12)
corner found (22, 12)
(((22, 12), (False, False, True, True)), 'West', 1)
corner found (28, 3)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, True, True, False)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (True, True, True, False)), 'South', 1)
corner found (23, 12)
corner found (23, 12)
(((23, 12), (False, False, True, True)), 'East', 1)
corner found (21, 12)
corner found (21, 12)
(((21, 12), (False, False, True, True)), 'West', 1)
corner found (28, 4)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, True, True, False)), 'North', 1)
corner found (28, 2)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (True, True, True, False)), 'South', 1)
corner found (22, 12)
corner found (22, 12)
(((22, 12), (False, False, True, True)), 'East', 1)
corner found (20, 12)
corner found (20, 12)
(((20, 12), (False, False, True, True)), 'West', 1)
corner found (28, 5)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, True, True, False)), 'North', 1)
corner found (28, 3)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, True, True, False)), 'South', 1)
corner found (21, 12)
corner found (21, 12)
(((21, 12), (False, False, True, True)), 'East', 1)
corner found (19, 12)
corner found (19, 12)
(((19, 12), (False, False, True, True)), 'West', 1)
corner found (28, 6)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, True, False)), 'North', 1)
corner found (28, 4)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, True, True, False)), 'South', 1)
corner found (20, 12)
corner found (20, 12)
(((20, 12), (False, False, True, True)), 'East', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (False, False, True, True)), 'West', 1)
corner found (28, 7)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, True, True, False)), 'North', 1)
corner found (28, 5)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, True, True, False)), 'South', 1)
corner found (27, 6)
corner found (27, 6)
corner found (27, 6)
(((27, 6), (True, True, True, False)), 'West', 1)
corner found (18, 11)
corner found (18, 11)
(((18, 11), (False, False, True, True)), 'South', 1)
corner found (19, 12)
corner found (19, 12)
(((19, 12), (False, False, True, True)), 'East', 1)
corner found (17, 12)
corner found (17, 12)
(((17, 12), (False, False, True, True)), 'West', 1)
corner found (28, 8)
corner found (28, 8)
corner found (28, 8)
(((28, 8), (True, True, True, False)), 'North', 1)
corner found (28, 6)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, True, False)), 'South', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (False, False, True, True)), 'East', 1)
corner found (16, 12)
corner found (16, 12)
(((16, 12), (False, False, True, True)), 'West', 1)
corner found (28, 7)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, True, True, False)), 'South', 1)
corner found (27, 8)
corner found (27, 8)
corner found (27, 8)
(((27, 8), (True, True, True, False)), 'West', 1)
corner found (17, 12)
corner found (17, 12)
(((17, 12), (False, False, True, True)), 'East', 1)
corner found (15, 12)
corner found (15, 12)
(((15, 12), (False, False, True, True)), 'West', 1)
corner found (16, 12)
corner found (16, 12)
(((16, 12), (False, False, True, True)), 'East', 1)
corner found (14, 12)
corner found (14, 12)
(((14, 12), (False, False, True, True)), 'West', 1)
corner found (15, 12)
corner found (15, 12)
(((15, 12), (False, False, True, True)), 'East', 1)
corner found (13, 12)
corner found (13, 12)
(((13, 12), (False, False, True, True)), 'West', 1)
corner found (14, 12)
corner found (14, 12)
(((14, 12), (False, False, True, True)), 'East', 1)
corner found (15, 9)
(((15, 9), (True, False, False, False)), 'North', 1)
corner found (16, 8)
(((16, 8), (True, False, False, False)), 'East', 1)
corner found (26, 11)
(((26, 11), (False, False, False, True)), 'South', 1)
corner found (25, 12)
(((25, 12), (False, False, False, True)), 'West', 1)
corner found (26, 5)
(((26, 5), (False, False, False, True)), 'South', 1)
corner found (27, 6)
(((27, 6), (False, False, False, True)), 'East', 1)
corner found (17, 12)
corner found (17, 12)
(((17, 12), (True, True, False, False)), 'East', 1)
corner found (15, 12)
corner found (15, 12)
(((15, 12), (True, True, False, False)), 'West', 1)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (False, False, True, True)), 'North', 1)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (False, False, True, True)), 'South', 1)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (True, True, False, False)), 'North', 1)
corner found (26, 9)
corner found (26, 9)
(((26, 9), (True, True, False, False)), 'South', 1)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (True, True, False, False)), 'East', 1)
corner found (24, 10)
(((24, 10), (True, False, False, False)), 'North', 1)
corner found (24, 8)
(((24, 8), (True, False, False, False)), 'South', 1)
corner found (24, 4)
(((24, 4), (True, False, False, False)), 'East', 1)
corner found (22, 4)
(((22, 4), (True, False, False, False)), 'West', 1)
corner found (26, 6)
(((26, 6), (True, False, False, False)), 'North', 1)
corner found (26, 4)
(((26, 4), (True, False, False, False)), 'South', 1)
corner found (28, 8)
corner found (28, 8)
(((28, 8), (True, True, False, False)), 'North', 1)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, False, False)), 'South', 1)
corner found (26, 6)
(((26, 6), (False, False, False, True)), 'North', 1)
corner found (26, 4)
(((26, 4), (False, False, False, True)), 'South', 1)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, False, False)), 'East', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, False, False)), 'West', 1)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, True, False, False)), 'South', 1)
corner found (27, 8)
corner found (27, 8)
(((27, 8), (True, True, False, False)), 'West', 1)
corner found (26, 5)
(((26, 5), (False, False, False, True)), 'North', 1)
corner found (26, 3)
(((26, 3), (False, False, False, True)), 'South', 1)
corner found (25, 4)
(((25, 4), (False, False, False, True)), 'West', 1)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (True, True, False, False)), 'North', 1)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (True, True, False, False)), 'West', 1)
corner found (26, 4)
(((26, 4), (False, False, False, True)), 'North', 1)
corner found (28, 12)
corner found (28, 12)
corner found (28, 12)
(((28, 12), (True, True, False, True)), 'North', 1)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, False, False)), 'South', 1)
corner found (28, 11)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (True, True, False, True)), 'South', 1)
corner found (28, 12)
corner found (28, 12)
corner found (28, 12)
(((28, 12), (True, True, False, True)), 'North', 1)
corner found (28, 10)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, False, True)), 'South', 1)
corner found (28, 11)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (True, True, False, True)), 'North', 1)
corner found (27, 10)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (True, True, False, True)), 'West', 1)
corner found (16, 4)
(((16, 4), (False, True, False, False)), 'North', 1)
corner found (16, 2)
(((16, 2), (False, True, False, False)), 'South', 1)
corner found (26, 4)
(((26, 4), (False, False, True, False)), 'North', 1)
corner found (26, 4)
(((26, 4), (False, False, True, False)), 'East', 1)
corner found (24, 4)
(((24, 4), (False, False, True, False)), 'West', 1)
corner found (22, 6)
corner found (22, 6)
(((22, 6), (True, True, False, False)), 'North', 1)
corner found (22, 4)
corner found (22, 4)
(((22, 4), (True, True, False, False)), 'South', 1)
corner found (24, 12)
(((24, 12), (False, False, True, False)), 'East', 1)
corner found (22, 12)
(((22, 12), (False, False, True, False)), 'West', 1)
corner found (11, 9)
(((11, 9), (False, True, False, False)), 'North', 1)
corner found (11, 7)
(((11, 7), (False, True, False, False)), 'South', 1)
corner found (12, 8)
(((12, 8), (False, True, False, False)), 'East', 1)
corner found (9, 7)
(((9, 7), (False, True, False, False)), 'South', 1)
corner found (22, 2)
corner found (22, 2)
(((22, 2), (True, True, False, False)), 'East', 1)
corner found (20, 2)
corner found (20, 2)
(((20, 2), (True, True, False, False)), 'West', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (False, False, True, True)), 'North', 1)
corner found (26, 8)
corner found (26, 8)
(((26, 8), (False, False, True, True)), 'South', 1)
corner found (28, 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (True, True, True, False)), 'East', 1)
corner found (26, 1)
corner found (26, 1)
corner found (26, 1)
(((26, 1), (True, True, True, False)), 'West', 1)
corner found (28, 6)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, True, True, False)), 'East', 1)
corner found (26, 6)
corner found (26, 6)
corner found (26, 6)
(((26, 6), (True, True, True, False)), 'West', 1)
corner found (18, 12)
corner found (18, 12)
(((18, 12), (False, False, True, True)), 'North', 1)
corner found (18, 10)
corner found (18, 10)
(((18, 10), (False, False, True, True)), 'South', 1)
corner found (28, 8)
corner found (28, 8)
corner found (28, 8)
(((28, 8), (True, True, True, False)), 'East', 1)
corner found (26, 8)
corner found (26, 8)
corner found (26, 8)
(((26, 8), (True, True, True, False)), 'West', 1)
corner found (17, 8)
(((17, 8), (True, False, False, False)), 'East', 1)
corner found (15, 8)
(((15, 8), (True, False, False, False)), 'West', 1)
corner found (26, 12)
(((26, 12), (False, False, False, True)), 'East', 1)
corner found (24, 12)
(((24, 12), (False, False, False, True)), 'West', 1)
corner found (16, 12)
corner found (16, 12)
(((16, 12), (True, True, False, False)), 'East', 1)
corner found (14, 12)
corner found (14, 12)
(((14, 12), (True, True, False, False)), 'West', 1)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (False, False, True, True)), 'North', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (False, False, True, True)), 'South', 1)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, False, False)), 'North', 1)
corner found (26, 8)
corner found (26, 8)
(((26, 8), (True, True, False, False)), 'South', 1)
corner found (24, 9)
(((24, 9), (True, False, False, False)), 'South', 1)
corner found (22, 5)
(((22, 5), (True, False, False, False)), 'North', 1)
corner found (22, 3)
(((22, 3), (True, False, False, False)), 'South', 1)
corner found (23, 4)
(((23, 4), (True, False, False, False)), 'East', 1)
corner found (26, 5)
(((26, 5), (True, False, False, False)), 'South', 1)
corner found (27, 6)
(((27, 6), (True, False, False, False)), 'East', 1)
corner found (28, 8)
corner found (28, 8)
(((28, 8), (True, True, False, False)), 'East', 1)
corner found (26, 8)
corner found (26, 8)
(((26, 8), (True, True, False, False)), 'West', 1)
corner found (26, 4)
(((26, 4), (False, False, False, True)), 'East', 1)
corner found (24, 4)
(((24, 4), (False, False, False, True)), 'West', 1)
corner found (28, 10)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, False, True)), 'East', 1)
corner found (26, 10)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, False, True)), 'West', 1)
corner found (18, 8)
(((18, 8), (True, False, False, False)), 'East', 1)
corner found (16, 8)
(((16, 8), (True, False, False, False)), 'West', 1)
corner found (22, 4)
(((22, 4), (True, False, False, False)), 'North', 1)
corner found (22, 2)
(((22, 2), (True, False, False, False)), 'South', 1)
corner found (28, 6)
(((28, 6), (True, False, False, False)), 'East', 1)
corner found (26, 6)
(((26, 6), (True, False, False, False)), 'West', 1)
corner found (18, 9)
(((18, 9), (True, False, False, False)), 'North', 1)
corner found (17, 8)
(((17, 8), (True, False, False, False)), 'West', 1)
corner found (22, 3)
(((22, 3), (True, False, False, False)), 'North', 1)
corner found (22, 1)
(((22, 1), (True, False, False, False)), 'South', 1)
corner found (21, 2)
(((21, 2), (True, False, False, False)), 'West', 1)
corner found (28, 7)
(((28, 7), (True, False, False, False)), 'North', 1)
corner found (28, 5)
(((28, 5), (True, False, False, False)), 'South', 1)
corner found (27, 6)
(((27, 6), (True, False, False, False)), 'West', 1)
corner found (22, 2)
(((22, 2), (True, False, False, False)), 'North', 1)
corner found (28, 6)
(((28, 6), (True, False, False, False)), 'North', 1)
corner found (28, 4)
(((28, 4), (True, False, False, False)), 'South', 1)
corner found (28, 5)
(((28, 5), (True, False, False, False)), 'North', 1)
corner found (28, 3)
(((28, 3), (True, False, False, False)), 'South', 1)
corner found (28, 4)
(((28, 4), (True, False, False, False)), 'North', 1)
corner found (28, 2)
(((28, 2), (True, False, False, False)), 'South', 1)
corner found (28, 3)
(((28, 3), (True, False, False, False)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (True, False, True, False)), 'South', 1)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (True, False, True, False)), 'North', 1)
corner found (27, 1)
corner found (27, 1)
(((27, 1), (True, False, True, False)), 'West', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, False, True, False)), 'North', 1)
corner found (28, 1)
corner found (28, 1)
(((28, 1), (True, False, True, False)), 'South', 1)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, False, True, False)), 'North', 1)
corner found (28, 2)
corner found (28, 2)
(((28, 2), (True, False, True, False)), 'South', 1)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, False, True, False)), 'North', 1)
corner found (28, 3)
corner found (28, 3)
(((28, 3), (True, False, True, False)), 'South', 1)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, False, True, False)), 'North', 1)
corner found (28, 4)
corner found (28, 4)
(((28, 4), (True, False, True, False)), 'South', 1)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, False, True, False)), 'North', 1)
corner found (28, 5)
corner found (28, 5)
(((28, 5), (True, False, True, False)), 'South', 1)
corner found (27, 6)
corner found (27, 6)
(((27, 6), (True, False, True, False)), 'West', 1)
corner found (28, 8)
corner found (28, 8)
(((28, 8), (True, False, True, False)), 'North', 1)
corner found (28, 6)
corner found (28, 6)
(((28, 6), (True, False, True, False)), 'South', 1)
corner found (28, 7)
corner found (28, 7)
(((28, 7), (True, False, True, False)), 'South', 1)
corner found (27, 8)
corner found (27, 8)
(((27, 8), (True, False, True, False)), 'West', 1)
corner found (16, 3)
(((16, 3), (False, True, False, False)), 'South', 1)
corner found (17, 4)
(((17, 4), (False, True, False, False)), 'East', 1)
corner found (24, 5)
(((24, 5), (False, False, True, False)), 'North', 1)
corner found (25, 4)
(((25, 4), (False, False, True, False)), 'East', 1)
corner found (23, 4)
(((23, 4), (False, False, True, False)), 'West', 1)
corner found (22, 5)
corner found (22, 5)
(((22, 5), (True, True, False, False)), 'South', 1)
corner found (23, 12)
(((23, 12), (False, False, True, False)), 'East', 1)
corner found (21, 12)
(((21, 12), (False, False, True, False)), 'West', 1)
corner found (11, 10)
(((11, 10), (False, True, False, False)), 'North', 1)
corner found (11, 8)
(((11, 8), (False, True, False, False)), 'South', 1)
corner found (13, 8)
(((13, 8), (False, True, False, False)), 'East', 1)
corner found (11, 8)
(((11, 8), (False, True, False, False)), 'West', 1)
corner found (21, 2)
corner found (21, 2)
(((21, 2), (True, True, False, False)), 'East', 1)
corner found (26, 9)
corner found (26, 9)
(((26, 9), (False, False, True, True)), 'North', 1)
corner found (27, 8)
corner found (27, 8)
(((27, 8), (False, False, True, True)), 'East', 1)
corner found (27, 1)
corner found (27, 1)
corner found (27, 1)
(((27, 1), (True, True, True, False)), 'East', 1)
corner found (25, 1)
corner found (25, 1)
corner found (25, 1)
(((25, 1), (True, True, True, False)), 'West', 1)
corner found (26, 5)
corner found (26, 5)
corner found (26, 5)
(((26, 5), (True, True, True, False)), 'South', 1)
corner found (27, 6)
corner found (27, 6)
corner found (27, 6)
(((27, 6), (True, True, True, False)), 'East', 1)
corner found (18, 11)
corner found (18, 11)
(((18, 11), (False, False, True, True)), 'North', 1)
corner found (18, 9)
corner found (18, 9)
(((18, 9), (False, False, True, True)), 'South', 1)
corner found (19, 10)
corner found (19, 10)
(((19, 10), (False, False, True, True)), 'East', 1)
corner found (26, 9)
corner found (26, 9)
corner found (26, 9)
(((26, 9), (True, True, True, False)), 'North', 1)
corner found (27, 8)
corner found (27, 8)
corner found (27, 8)
(((27, 8), (True, True, True, False)), 'East', 1)
corner found (24, 6)
(((24, 6), (False, False, True, False)), 'North', 1)
corner found (24, 4)
(((24, 4), (False, False, True, False)), 'South', 1)
corner found (26, 10)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, True, False)), 'North', 1)
corner found (26, 8)
corner found (26, 8)
corner found (26, 8)
(((26, 8), (True, True, True, False)), 'South', 1)
corner found (24, 7)
(((24, 7), (False, False, True, False)), 'North', 1)
corner found (24, 5)
(((24, 5), (False, False, True, False)), 'South', 1)
corner found (26, 11)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (True, True, True, False)), 'North', 1)
corner found (26, 9)
corner found (26, 9)
corner found (26, 9)
(((26, 9), (True, True, True, False)), 'South', 1)
corner found (27, 10)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (True, True, True, False)), 'East', 1)
corner found (24, 8)
(((24, 8), (False, False, True, False)), 'North', 1)
corner found (24, 6)
(((24, 6), (False, False, True, False)), 'South', 1)
corner found (26, 12)
corner found (26, 12)
corner found (26, 12)
(((26, 12), (True, True, True, False)), 'North', 1)
corner found (26, 10)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, True, False)), 'South', 1)
corner found (28, 10)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, True, False)), 'East', 1)
corner found (26, 10)
corner found (26, 10)
corner found (26, 10)
(((26, 10), (True, True, True, False)), 'West', 1)
corner found (24, 9)
(((24, 9), (False, False, True, False)), 'North', 1)
corner found (24, 7)
(((24, 7), (False, False, True, False)), 'South', 1)
corner found (23, 8)
(((23, 8), (False, False, True, False)), 'West', 1)
corner found (26, 11)
corner found (26, 11)
corner found (26, 11)
(((26, 11), (True, True, True, False)), 'South', 1)
corner found (25, 12)
corner found (25, 12)
corner found (25, 12)
(((25, 12), (True, True, True, False)), 'West', 1)
corner found (28, 11)
corner found (28, 11)
corner found (28, 11)
(((28, 11), (True, True, True, False)), 'North', 1)
corner found (27, 10)
corner found (27, 10)
corner found (27, 10)
(((27, 10), (True, True, True, False)), 'West', 1)
corner found (24, 10)
(((24, 10), (False, False, True, False)), 'North', 1)
corner found (24, 8)
(((24, 8), (False, False, True, False)), 'South', 1)
corner found (28, 12)
corner found (28, 12)
corner found (28, 12)
corner found (28, 12)
(((28, 12), (True, True, True, True)), 'North', 1)
corner found (28, 10)
corner found (28, 10)
corner found (28, 10)
(((28, 10), (True, True, True, False)), 'South', 1)
corner found (24, 9)
(((24, 9), (False, False, True, False)), 'South', 1)
path: ['North', 'East', 'East', 'East', 'East', 'North', 'North', 'West', 'West', 'West', 'West', 'North', 'North', 'North', 'North', 'North', 'North', 'North', 'North', 'West', 'West', 'West', 'West', 'South', 'South', 'East', 'East', 'East', 'East', 'South', 'South', 'South', 'South', 'South', 'South', 'West', 'West', 'South', 'South', 'South', 'West', 'West', 'East', 'East', 'North', 'North', 'North', 'East', 'East', 'East', 'East', 'East', 'East', 'East', 'East', 'South', 'South', 'East', 'East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'North', 'North', 'East', 'East', 'North', 'North', 'East', 'East', 'East', 'East', 'South', 'South', 'South', 'South', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South', 'South', 'South', 'South', 'North', 'North', 'North', 'North', 'North', 'North', 'North', 'West', 'West', 'North', 'North', 'East', 'East', 'North', 'North']
path length: 106
*** PASS: Heuristic resulted in expansion of 741 nodes

### Question q6: 3/3 ###


Question q7
===========

*** PASS: test_cases/q7/food_heuristic_1.test
*** PASS: test_cases/q7/food_heuristic_10.test
*** PASS: test_cases/q7/food_heuristic_11.test
*** PASS: test_cases/q7/food_heuristic_12.test
*** PASS: test_cases/q7/food_heuristic_13.test
*** PASS: test_cases/q7/food_heuristic_14.test
*** PASS: test_cases/q7/food_heuristic_15.test
*** PASS: test_cases/q7/food_heuristic_16.test
*** PASS: test_cases/q7/food_heuristic_17.test
*** PASS: test_cases/q7/food_heuristic_2.test
*** PASS: test_cases/q7/food_heuristic_3.test
*** PASS: test_cases/q7/food_heuristic_4.test
*** PASS: test_cases/q7/food_heuristic_5.test
*** PASS: test_cases/q7/food_heuristic_6.test
*** PASS: test_cases/q7/food_heuristic_7.test
*** PASS: test_cases/q7/food_heuristic_8.test
*** PASS: test_cases/q7/food_heuristic_9.test
*** PASS: test_cases/q7/food_heuristic_grade_tricky.test
*** 	expanded nodes: 4137
*** 	thresholds: [15000, 12000, 9000, 7000]

### Question q7: 5/4 ###


Question q8
===========

[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_1.test
*** 	pacman layout:		Test 1
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_10.test
*** 	pacman layout:		Test 10
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_11.test
*** 	pacman layout:		Test 11
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_12.test
*** 	pacman layout:		Test 12
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_13.test
*** 	pacman layout:		Test 13
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_2.test
*** 	pacman layout:		Test 2
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_3.test
*** 	pacman layout:		Test 3
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_4.test
*** 	pacman layout:		Test 4
*** 	solution length:		3
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_5.test
*** 	pacman layout:		Test 5
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_6.test
*** 	pacman layout:		Test 6
*** 	solution length:		2
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_7.test
*** 	pacman layout:		Test 7
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_8.test
*** 	pacman layout:		Test 8
*** 	solution length:		1
[SearchAgent] using function depthFirstSearch
[SearchAgent] using problem type PositionSearchProblem
*** PASS: test_cases/q8/closest_dot_9.test
*** 	pacman layout:		Test 9
*** 	solution length:		1

### Question q8: 3/3 ###


Finished at 11:47:37

Provisional grades
==================
Question q1: 3/3
Question q2: 3/3
Question q3: 3/3
Question q4: 3/3
Question q5: 3/3
Question q6: 3/3
Question q7: 5/4
Question q8: 3/3
------------------
Total: 26/25

Your grades are NOT yet registered.  To register your grades, make sure
to follow your instructor's guidelines to receive credit on your project.

